[
  {
    "objectID": "description.html",
    "href": "description.html",
    "title": "Project Description",
    "section": "",
    "text": "Introduction\nThis analysis aims to guide policymakers in identifying areas of Pennsylvania where resources can be allocated more equitably and effectively. By examining demographic, economic, and environmental data, the goal is to uncover patterns and clusters of counties that highlight disparities and areas of need. The results of this study will provide evidence-based insights to inform resource allocation and policy interventions, particularly in addressing poverty, unemployment, and access to environmental resources like parks.\n\n\nResearch Questions\n\nAre demographic, economic, and environmental factors spatially correlated across the state of Pennsylvania?\nHow can the identification of similar county clusters help policymakers equitably allocate resources?\n\n\n\nRequirements Met\n\nData was collected through a means more sophisticated than downloading (API).\nIt combines data collected from 3 or more different sources.\nThe analysis of the data is reasonably complex, involving multiple steps (geospatial joins/operations).\nScikit-learn was used to perform a clustering analysis.\n\n\n\nData Setup\nTo answer these research questions, we integrated data from several sources:\n\nAmerican Community Survey (ACS): Using the Census Bureau’s ACS 5-year estimates API, we gathered key demographic and economic indicators for all counties in Pennsylvania. These include:\n\nTotal population\nMedian household income\nPer capita income\nEducational attainment (e.g., high school graduates, bachelor’s degree holders)\nPoverty rate\nMedian housing value\nRacial demographics (e.g., white, Black, Hispanic populations)\nGeospatial Data: We obtained county boundary geometries for Pennsylvania from a GeoJSON file and reprojected the data to Pennsylvania State Plane (EPSG: 2272) for spatial analysis.\n\nPark Data: Data on local park coverage by county was sourced from the Pennsylvania Department of Conservation and Natural Resources (DCNR). Using park acreage, we calculated the percentage of local park area relative to each county’s total area.\nUnemployment Data: Unemployment rates were extracted from the National Institute on Minority Health and Health Disparities.\n\n\n\nData Preparation and Cleaning\nMerging Datasets: The ACS data was merged with geospatial county boundaries using unique identifiers. Additional park and unemployment data were integrated using county names. Derived Variables: Several new variables were calculated to enhance the analysis:\n\nPercent White, Black, Hispanic populations: Calculated as proportions of the total population.\nEducational attainment percentages: Calculated for both high school graduates and bachelor’s degree holders.\nPercent Local Park: Calculated as the proportion of county area covered by local parks.\nHandling Missing Values: Missing values were handled by imputing medians or zeros for specific variables to ensure compatibility for clustering and other analyses.\n\n\n\nAnalysis Approach\nCorrelation Analysis: A correlation matrix was generated to explore relationships between demographic, economic, and environmental variables.\nSpatial Visualization: Maps were created to visualize spatial patterns in key variables like unemployment rates, poverty levels, and local park coverage.\nClustering Analysis: Using K-means clustering, counties were grouped based on socioeconomic, demographic, and environmental characteristics. This helped identify clusters of counties with similar needs or advantages.\nSocioeconomic Index: A composite index was calculated combining median household income, bachelor’s degree attainment, and poverty rate to rank counties based on overall socioeconomic well-being.\n\n\nGoal and Application\nThe results of this analysis will:\n\nHighlight disparities across Pennsylvania counties in income, education, environmental access, and unemployment.\nIdentify clusters of counties with shared characteristics to allow targeted policymaking.\nServe as a resource for state and local governments to allocate resources more equitably, focusing on underserved communities.\n\n\n\nAbout the Researchers\nMacy Trout and Ryan Swett conducted this research for MUSA 550 Geospatial Data Science in Python. They are Master of Urban Spatial Analytics students at the University of Pennsylvania.",
    "crumbs": [
      "Project Description"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Addressing Disparities Across Pennsylvania Counties: A Data-Driven Approach to Equitable Resource Allocation",
    "section": "",
    "text": "Pennsylvania faces significant demographic, economic, and environmental disparities across its counties. These differences exist regarding educational attainment, income, unemployment, poverty, and access to public resources like parks and recreational spaces. Such disparities necessitate a data-driven approach to inform equitable resource allocation and policy-making. This work flow outlines findings from an analysis of key socioeconomic indicators and spatial patterns across the state, providing recommendations to guide resource allocation and address disparities effectively.\nThe analysis seeks to answer two key research questions: (1) Are demographic, economic, and environmental factors spatially correlated across Pennsylvania? and (2) How can the identification of similar county clusters help policymakers equitably allocate resources? Using advanced geospatial and clustering techniques, we grouped counties based on shared socioeconomic characteristics, identifying areas of high need and areas of strength. The findings from this study inform actionable recommendations for allocating resources to foster equitable growth and prosperity across Pennsylvania.\nThe data for this analysis was taken from the American Community Survey (ACS), supplemented with local datasets on park access and unemployment. Key variables included median household income, unemployment rates, poverty levels, educational attainment, and local park coverage. These variables were standardized and used to create clusters of counties, revealing patterns of need and opportunity. The spatial correlations between these factors highlight the interconnectedness of education, income, and access to public resources in shaping socioeconomic outcomes.\nOur analysis identified four distinct clusters of counties. The first cluster, labeled “Prosperous Counties,” includes areas like Chester and Montgomery counties. These counties exhibit high educational attainment, elevated median incomes, low poverty, and extensive park coverage, reflecting their overall prosperity. The second cluster, “Emerging Counties,” includes areas like Lancaster and York counties. These counties show moderate economic performance but are hindered by gaps in educational attainment and elevated unemployment rates, indicating potential for targeted intervention. The third cluster, “Struggling Counties,” encompasses areas such as Fayette, Luzerne, and Northumberland counties. These counties face severe challenges, including high poverty rates, low incomes, high unemployment, and limited park access. Finally, the fourth cluster, “Urban Economic Hubs,” includes Philadelphia and Allegheny counties. These urban centers have high populations and economic significance but also exhibit high income inequality and pockets of poverty.\nKey spatial correlations identified in the analysis reveal that counties with higher educational attainment consistently report higher incomes and lower unemployment rates. Conversely, counties with elevated poverty levels often experience limited access to parks and recreational spaces, suggesting a gap in public investment. Additionally, rural counties face systemic challenges in education and economic opportunity, while urban areas exhibit concentrated inequality alongside stronger infrastructural assets.\nBased on these findings, we recommend a series of targeted interventions. First, investing in education and workforce development should be prioritized in struggling counties like Fayette, Luzerne, and Northumberland. This could include scholarship programs, vocational training, and partnerships with local industries to create employment pathways. Second, job creation and economic revitalization efforts should focus on counties such as Cambria and Schuylkill, where infrastructure improvements can attract employers and stimulate economic growth. Third, enhancing park infrastructure in underserved counties will improve public health and foster community engagement. Counties like Northumberland and Luzerne would particularly benefit from investments in recreational spaces. Finally, urban centers like Philadelphia and Allegheny should be leveraged as hubs for regional growth. These counties can support surrounding areas through workforce pipelines and regional collaboration initiatives.\nThis data-driven approach provides a roadmap for equitable resource allocation across Pennsylvania. Policymakers should prioritize counties with the most pressing needs while leveraging the strengths of prosperous areas to serve as models for best practices. By investing in education, public health, and economic revitalization, Pennsylvania can foster growth and reduce disparities across the state. A commitment to monitoring progress through data-driven tools will ensure accountability and enable policymakers to refine strategies over time. This approach not only addresses current disparities but also lays the foundation for a more equitable and prosperous Pennsylvania for future generations.",
    "crumbs": [
      "Project Overview"
    ]
  },
  {
    "objectID": "index.html#project-overview",
    "href": "index.html#project-overview",
    "title": "Addressing Disparities Across Pennsylvania Counties: A Data-Driven Approach to Equitable Resource Allocation",
    "section": "",
    "text": "Pennsylvania faces significant demographic, economic, and environmental disparities across its counties. These differences exist regarding educational attainment, income, unemployment, poverty, and access to public resources like parks and recreational spaces. Such disparities necessitate a data-driven approach to inform equitable resource allocation and policy-making. This work flow outlines findings from an analysis of key socioeconomic indicators and spatial patterns across the state, providing recommendations to guide resource allocation and address disparities effectively.\nThe analysis seeks to answer two key research questions: (1) Are demographic, economic, and environmental factors spatially correlated across Pennsylvania? and (2) How can the identification of similar county clusters help policymakers equitably allocate resources? Using advanced geospatial and clustering techniques, we grouped counties based on shared socioeconomic characteristics, identifying areas of high need and areas of strength. The findings from this study inform actionable recommendations for allocating resources to foster equitable growth and prosperity across Pennsylvania.\nThe data for this analysis was taken from the American Community Survey (ACS), supplemented with local datasets on park access and unemployment. Key variables included median household income, unemployment rates, poverty levels, educational attainment, and local park coverage. These variables were standardized and used to create clusters of counties, revealing patterns of need and opportunity. The spatial correlations between these factors highlight the interconnectedness of education, income, and access to public resources in shaping socioeconomic outcomes.\nOur analysis identified four distinct clusters of counties. The first cluster, labeled “Prosperous Counties,” includes areas like Chester and Montgomery counties. These counties exhibit high educational attainment, elevated median incomes, low poverty, and extensive park coverage, reflecting their overall prosperity. The second cluster, “Emerging Counties,” includes areas like Lancaster and York counties. These counties show moderate economic performance but are hindered by gaps in educational attainment and elevated unemployment rates, indicating potential for targeted intervention. The third cluster, “Struggling Counties,” encompasses areas such as Fayette, Luzerne, and Northumberland counties. These counties face severe challenges, including high poverty rates, low incomes, high unemployment, and limited park access. Finally, the fourth cluster, “Urban Economic Hubs,” includes Philadelphia and Allegheny counties. These urban centers have high populations and economic significance but also exhibit high income inequality and pockets of poverty.\nKey spatial correlations identified in the analysis reveal that counties with higher educational attainment consistently report higher incomes and lower unemployment rates. Conversely, counties with elevated poverty levels often experience limited access to parks and recreational spaces, suggesting a gap in public investment. Additionally, rural counties face systemic challenges in education and economic opportunity, while urban areas exhibit concentrated inequality alongside stronger infrastructural assets.\nBased on these findings, we recommend a series of targeted interventions. First, investing in education and workforce development should be prioritized in struggling counties like Fayette, Luzerne, and Northumberland. This could include scholarship programs, vocational training, and partnerships with local industries to create employment pathways. Second, job creation and economic revitalization efforts should focus on counties such as Cambria and Schuylkill, where infrastructure improvements can attract employers and stimulate economic growth. Third, enhancing park infrastructure in underserved counties will improve public health and foster community engagement. Counties like Northumberland and Luzerne would particularly benefit from investments in recreational spaces. Finally, urban centers like Philadelphia and Allegheny should be leveraged as hubs for regional growth. These counties can support surrounding areas through workforce pipelines and regional collaboration initiatives.\nThis data-driven approach provides a roadmap for equitable resource allocation across Pennsylvania. Policymakers should prioritize counties with the most pressing needs while leveraging the strengths of prosperous areas to serve as models for best practices. By investing in education, public health, and economic revitalization, Pennsylvania can foster growth and reduce disparities across the state. A commitment to monitoring progress through data-driven tools will ensure accountability and enable policymakers to refine strategies over time. This approach not only addresses current disparities but also lays the foundation for a more equitable and prosperous Pennsylvania for future generations.",
    "crumbs": [
      "Project Overview"
    ]
  },
  {
    "objectID": "analysis/1-python-code-blocks.html",
    "href": "analysis/1-python-code-blocks.html",
    "title": "Python code blocks",
    "section": "",
    "text": "This is an example from the Quarto documentation that shows how to mix executable Python code blocks into a markdown file in a “Quarto markdown” .qmd file.\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "analysis/index.html",
    "href": "analysis/index.html",
    "title": "Analysis",
    "section": "",
    "text": "Analysis\nThis section includes a walk-through of the study’s methodology. It will begin with an overview of the data collection and preprocessing steps. It will continue on to show some of the key exploratory spatial data analysis conducted to help contextualize the data and identift initial trends. Finally, it will shows the K-Means Clustering analysis and discuss the broader conclusions that can be drawn from this workflow.",
    "crumbs": [
      "Analysis"
    ]
  },
  {
    "objectID": "analysis/Data_Preprocess.html",
    "href": "analysis/Data_Preprocess.html",
    "title": "Data Collection & Preprocessing",
    "section": "",
    "text": "We begin by importing socio-demographic data from the American Community Survey and creating a new dataframe.\n\n\nCode\nimport pandas as pd\nimport geopandas as gpd\nfrom census import Census\nfrom us import states\nimport matplotlib.pyplot as plt\n\nAPI_KEY = '0da0c882151e10740c1a0a844cf845096bedb565'\nc = Census(API_KEY)\n\nacs_data = c.acs5.state_county(\n    fields=[\n        'NAME',         # County name\n        'B01003_001E',  # Total population\n        'B15003_001E',  # Population 25+\n        'B19013_001E',  # Median household income\n        'B19301_001E',  # Per capita income\n        'B01002_001E',  # Median age\n        'B02001_002E',  # White population\n        'B02001_003E',  # African American population\n        'B03001_003E',  # Hispanic population\n        'B15003_017E',  # High school graduates\n        'B15003_022E',  # Bachelor’s degree holders\n        'B25077_001E',  # Median housing value\n        'B17001_002E',  # Population below poverty line\n    ],\n    state_fips=states.PA.fips,\n    county_fips=\"*\"\n)\n\nacs_df = pd.DataFrame(acs_data)\nacs_df.columns = [\n    'County',  # Name of the county\n    'Total Population',\n    'Population Over 25',\n    'Median Household Income', \n    'Per Capita Income', \n    'Median Age', \n    'White Population', \n    'African American Population', \n    'Hispanic Population', \n    'High School Graduates', \n    'Bachelors Degree Holders', \n    'Median Housing Value', \n    'Population Below Poverty Line',\n    'State',  \n    'County_Name'\n]\n\nacs_df['County'] = acs_df['County'].str.replace(\" County, Pennsylvania\", \"\", case=False)\nacs_df['County'] = acs_df['County'].str.upper()\nacs_df.drop(columns=['State'], inplace=True)\n\n\nIntel MKL WARNING: Support of Intel(R) Streaming SIMD Extensions 4.2 (Intel(R) SSE4.2) enabled only processors has been deprecated. Intel oneAPI Math Kernel Library 2025.0 will require Intel(R) Advanced Vector Extensions (Intel(R) AVX) instructions.\nIntel MKL WARNING: Support of Intel(R) Streaming SIMD Extensions 4.2 (Intel(R) SSE4.2) enabled only processors has been deprecated. Intel oneAPI Math Kernel Library 2025.0 will require Intel(R) Advanced Vector Extensions (Intel(R) AVX) instructions.\n\n\nNext, we load our spatial data: Pennsylvania counties. We will be analyzing 67 counties in the scope of this project. We create additional variables in our dataframe for race and educuation data.\n\n\nCode\ngeojson_path = \"/Users/ryanswett/Downloads/Python/Final_Project/PaCounty2024_11.geojson\"\ncounty_data = gpd.read_file(geojson_path)\ncounties = county_data.merge(\n    acs_df,\n    left_on='FIPS_COUNT',\n    right_on='County_Name',\n    how='left'\n)\n\n#| echo: true\n#| code-fold: true\ncounties['Percent_White'] = counties['White Population'] / counties['Total Population']*100 # Percent white\ncounties['Percent_Black'] = counties['African American Population'] / counties['Total Population']*100 # Percent black\ncounties['Percent_Hispanic'] = counties['Hispanic Population'] / counties['Total Population']*100 # Percent hispanic\ncounties['Percent_HS_degrees'] = counties['High School Graduates'] / counties['Total Population']*100 # Percent high school grads\ncounties['Percent_Bachelors'] = counties['Bachelors Degree Holders'] / counties['Population Over 25']*100 # Percent bachelors\ncounties['Percent_Poverty'] = counties['Population Below Poverty Line'] / counties['Population Over 25']*100 # Percent below poverty line\n\n\nNext, the park data is loaded into the project and cleaned by removing columns and calculating a new column for percent local park of each county.\n\n\nCode\nparks_path = \"/Users/ryanswett/Downloads/Python/Final_Project/DCNR_LocalPark202406/DCNR_LocalPark202406.shp\"\nparks_data = gpd.read_file(parks_path)\n\nparks_data = parks_data.drop(columns=['STATUS', 'PARK_FEE', 'ALT_NAME', 'PREMISE_AD', 'PREMISE_CI', 'PREMISE_ZI', 'YEAR_OPEN',\n                                     'PREMISE_CR', 'URL', 'COMMENTS', 'ATV', 'Basketball', 'Bicycling', 'Camping', 'Canoeing_K',\n                                     'CrossCount', 'Disc_Golf', 'Dog_Park', 'Equestrian', 'Fishing', 'Fitness_Eq', 'Golf',\n                                     'Hiking', 'Horseback_', 'Hunting', 'Ice_Fishin', 'Ice_Skatin', 'Motor_Boat', 'LWCF_Restr',\n                                     'Mountain_B', 'Natural_Wi', 'Organized_', 'Parking', 'Pavilion', 'Pets_Allow', 'Playground',\n                                     'Restrooms', 'Rock_Climb', 'Scenic_Vie', 'Sledding', 'Sports_Fie', 'Swimming', 'Tennis_Cou',\n                                     'Theatre_Am', 'Trails', 'Visitor_Ce', 'White_Wate', 'Wildlife_W', 'Amenity_Co', 'Feedback_l',\n                                     'Skate_Park'])\n\nupdated_parks = parks_data.groupby('PREMISE_CO')['Acres'].sum().reset_index()\nupdated_parks['park_sq_mi'] = updated_parks['Acres'] / 640\nupdated_parks['PREMISE_CO'] = updated_parks['PREMISE_CO'].str.upper()\n\nparks = counties.merge(\n    updated_parks,\n    left_on='County',  \n    right_on='PREMISE_CO',  \n    how='left')\n\nparks['Percent Local Park'] = parks['park_sq_mi'] / parks['AREA_SQ_MI'] * 100\n\n\nFinally, we add the unemployment data to the project and print the final dataframe with all of the data, called pa_counties. The final dataframe contains 67 rows, one for each Pennsylvania county. It will be used throughout the ESDA and K-Means Clustering sections to create spatial visualizations and draw informed conclusions.\n\n\nCode\nunemp_data = pd.read_csv(\"/Users/ryanswett/Downloads/Python/Final_Project/unemp.csv\")\nunemp_data['County'] = unemp_data['County'].str.replace('County', '', case=False).str.strip()\nunemp_data['County'] = unemp_data['County'].str.upper()\n\npa_counties = unemp_data.merge(\n    parks,\n    left_on='County', \n    right_on='County', \n    how='left')\n\npa_counties.rename(columns={\"Value (Percent)\": \"Unemp Rate\"}, inplace=True)\n\npd.set_option('display.max_columns', None)\npa_counties.head()\n\n\n\n\n\n\n\n\n\nCounty\nFIPS\nUnemp Rate\nSOUND\nMSLINK\nMAINT_CTY_\nAREA\nCOUNTY_PER\nCOUNTY_N_1\nNOTE_FILE\nIMAGE_NAME\nLEN\nNUMERIC_LA\nAREA_SQ_MI\nGPID\nPA_CTY_COD\nShape_Leng\nCOUNTY_NAM\nDISTRICT_O\nDISTRICT_N\nSPREAD_SHE\nCOUNTY_NUM\nFIPS_COUNT\nCOUNTY_ARE\ngeometry\nTotal Population\nPopulation Over 25\nMedian Household Income\nPer Capita Income\nMedian Age\nWhite Population\nAfrican American Population\nHispanic Population\nHigh School Graduates\nBachelors Degree Holders\nMedian Housing Value\nPopulation Below Poverty Line\nCounty_Name\nPercent_White\nPercent_Black\nPercent_Hispanic\nPercent_HS_degrees\nPercent_Bachelors\nPercent_Poverty\nPREMISE_CO\nAcres\npark_sq_mi\nPercent Local Park\n\n\n\n\n0\nPHILADELPHIA\n42101.0\n8.6\nNaN\n67.0\n5\n0.0\n0.0\n67.0\nNaN\npoll.bmp\n0.0\n2.0\n143.491659\n1785.0\n51\n157483.250595\nPHILADELPHIA\n6-5\n06\nNaN\n67\n101\n0.0\nPOLYGON ((-75.23643 39.93505, -75.23639 39.935...\n1593208.0\n1090012.0\n57537.0\n35553.0\n34.8\n590860.0\n638907.0\n249723.0\n287402.0\n204967.0\n215500.0\n351811.0\n101\n37.086181\n40.101920\n15.674225\n18.039201\n18.804105\n32.275883\nPHILADELPHIA\n14743.428866\n23.036608\n16.054318\n\n\n1\nPIKE\n42103.0\n8.5\nNaN\n51.0\n4\n0.0\n0.0\n51.0\nNaN\npoll.bmp\n0.0\n2.0\n567.997536\n1759.0\n52\n293195.463955\nPIKE\n4-4\n04\nNaN\n51\n103\n0.0\nPOLYGON ((-75.17105 41.47278, -75.17085 41.472...\n58996.0\n44410.0\n76416.0\n41139.0\n48.9\n48549.0\n3568.0\n7048.0\n12916.0\n6914.0\n225100.0\n5854.0\n103\n82.292020\n6.047868\n11.946573\n21.893010\n15.568566\n13.181716\nPIKE\n1680.749924\n2.626172\n0.462356\n\n\n2\nFAYETTE\n42051.0\n7.2\nNaN\n26.0\n1\n0.0\n0.0\n26.0\nNaN\npoll.bmp\n0.0\n1.0\n798.810630\n1793.0\n26\n319645.320154\nFAYETTE\n12-1\n12\nNaN\n26\n051\n0.0\nPOLYGON ((-79.92559 39.91495, -79.92527 39.915...\n128417.0\n94625.0\n55579.0\n31498.0\n45.2\n116188.0\n5437.0\n1780.0\n39796.0\n11625.0\n121800.0\n20090.0\n051\n90.477118\n4.233863\n1.386109\n30.989666\n12.285337\n21.231176\nFAYETTE\n3348.768523\n5.232451\n0.655030\n\n\n3\nCAMERON\n42023.0\n7.1\nNaN\n12.0\n4\n0.0\n0.0\n12.0\nNaN\npoll.bmp\n0.0\n2.0\n399.572096\n1768.0\n12\n193699.130807\nCAMERON\n2-4\n02\nNaN\n12\n023\n0.0\nPOLYGON ((-78.09337 41.21718, -78.11147 41.218...\n4536.0\n3476.0\n46186.0\n27426.0\n51.8\n4311.0\n2.0\n91.0\n1604.0\n302.0\n85900.0\n674.0\n023\n95.039683\n0.044092\n2.006173\n35.361552\n8.688147\n19.390104\nCAMERON\n96.706578\n0.151104\n0.037816\n\n\n4\nCARBON\n42025.0\n6.9\nNaN\n13.0\n2\n0.0\n0.0\n13.0\nNaN\npoll.bmp\n0.0\n2.0\n388.633376\n1769.0\n13\n207463.124915\nCARBON\n5-2\n05\nNaN\n13\n025\n0.0\nPOLYGON ((-75.60908 40.78745, -75.67682 40.774...\n65018.0\n48059.0\n64538.0\n34375.0\n46.3\n59656.0\n1582.0\n3889.0\n19099.0\n5999.0\n179600.0\n7551.0\n025\n91.753053\n2.433172\n5.981421\n29.374942\n12.482574\n15.711937\nCARBON\n3632.510434\n5.675798\n1.460450",
    "crumbs": [
      "Analysis",
      "Data Collection & Preprocessing"
    ]
  },
  {
    "objectID": "analysis/ESDA.html",
    "href": "analysis/ESDA.html",
    "title": "Exploratory Spatial Data Analysis",
    "section": "",
    "text": "This section will explore some of the key demographic data of Pennsylvania spatially. It will identify spatial clustering and other patterns through maps, a correlation matrix, and a scatter plot.\n\n\nIntel MKL WARNING: Support of Intel(R) Streaming SIMD Extensions 4.2 (Intel(R) SSE4.2) enabled only processors has been deprecated. Intel oneAPI Math Kernel Library 2025.0 will require Intel(R) Advanced Vector Extensions (Intel(R) AVX) instructions.\nIntel MKL WARNING: Support of Intel(R) Streaming SIMD Extensions 4.2 (Intel(R) SSE4.2) enabled only processors has been deprecated. Intel oneAPI Math Kernel Library 2025.0 will require Intel(R) Advanced Vector Extensions (Intel(R) AVX) instructions.\n\n\n\n\nCode\npa_counties = gpd.GeoDataFrame(pa_counties, geometry=pa_counties['geometry'])\npa_counties = pa_counties.to_crs(epsg=2272)\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\nnorm = Normalize(vmin=pa_counties['Median Household Income'].min(), vmax=pa_counties['Median Household Income'].max())\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Median Household Income',\n    cmap='spring',  \n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Median Income ($)\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\nplt.title(\"Median Household Income by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nThis first visualization highlights the median household income by county. Counties located nearby major cities tend to have higher median incomes than other counties. Specifically, counties near Philadelphia tend to have the highest medan income overall.\n\n\nCode\npa_counties = pa_counties.to_crs(epsg=2272)\n\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\nnorm = Normalize(vmin=pa_counties['Median Housing Value'].min(), vmax=pa_counties['Median Housing Value'].max() * 1.2)\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Median Housing Value',\n    cmap='spring',  \n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Median Housing Value ($)\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Median Housing Value by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nMedian housing value tends to be similar to median household income by county in Pennsylvania. Like median household income, median housing value tends to be higher in counties that are located nearby key Pennsylvania cities. There appears to be slight clustering in this map as well.\n\n\nCode\npa_counties = pa_counties.to_crs(epsg=2272)\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\nnorm = Normalize(vmin=pa_counties['Percent_Poverty'].min(), vmax=pa_counties['Percent_Poverty'].max())\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Percent_Poverty',\n    cmap='plasma',  \n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Below Poverty Line\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Population Below Poverty Line by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nPhiladelphia county has the highest percentage of people living below the poverty line. However, Philadelphia’s surrounding counties have the lowest. The rest of Pennsylvania does not seem to have a clear spatial pattern in terms of population living below the poverty line.\n\n\nCode\npa_counties = pa_counties.to_crs(epsg=2272)\n\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\nnorm = Normalize(vmin=pa_counties['Percent_Black'].min(), vmax=pa_counties['Percent_Black'].max() * 1.2)\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Percent_Black',\n    cmap='plasma',  \n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent African American\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Percent African American by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nThis map shows that the counties with the highest proportion of African Americans are nearby key cities in the state. The three counties where Philadelphia, Harrisburg, and Pittsburgh are located have some of the highest percentages of African Americans. There is a smaller proportion of African Americans clustered throughout most of the rest of the state.\n\n\nCode\npa_counties = pa_counties.to_crs(epsg=2272)\n\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\nnorm = Normalize(vmin=pa_counties['Percent_Bachelors'].min(), vmax=pa_counties['Percent_Bachelors'].max() * 1.2)\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Percent_Bachelors',\n    cmap='viridis',  \n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Bachelors Degree\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Percent Bachelors Degrees by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nSimilar to the visualizations with median housing value and income, the counties with a higher proportion of individuals who have Bachelors degrees seems to be in and around counties that have a major city. High education levels seem to be clustered in southeastern Pennsylvania near Philadelphia. This could be due in part to the colleges in this region of the state.\n\n\nCode\npa_counties = pa_counties.to_crs(epsg=2272)\n\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\nnorm = Normalize(vmin=pa_counties['Percent Local Park'].min(), vmax=pa_counties['Percent Local Park'].max() * 1.2)\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Percent Local Park',\n    cmap='Greens', \n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Local Park\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='black', markersize=50, edgecolor='black', label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='red', fontweight='bold', ha=\"left\")\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Percent Local Park by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nAlthough many of the counties toward the middle of the state have a large amount of green space, many lack a supply of public parks for residents to enjoy for free. However, Philadelphia and Pittsburgh are located in counties where a higher proportion of the county is made up of these accesible green spaces.\n\n\nCode\npa_counties = pa_counties.to_crs(epsg=2272)\n\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\nmin_unemp = pa_counties['Unemp Rate'].min()\nmax_unemp = pa_counties['Unemp Rate'].max()\nnorm = Normalize(vmin=min_unemp, vmax=max_unemp * 1.2)\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Unemp Rate',\n    cmap='viridis',\n    edgecolor='black',\n    linewidth=0.5,\n    legend=False,\n    norm=norm,\n    ax=ax\n)\n\nsm = plt.cm.ScalarMappable(cmap='viridis', norm=norm)\nsm.set_array([])\ncbar = fig.colorbar(sm, ax=ax)\ncbar.set_label(\"Unemployment Rate (%)\", fontsize=10, labelpad=10)\n\ncities_gdf.plot(ax=ax, color='white', markersize=50, label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\nlegend_elements = [Line2D([0], [0], marker='o', color='black', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Unemployment Rate by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nUnemployment rate appears to be slightly clustered in the state. For example, low unemployment seems to be common west of Harrisburg with higher levels of unemployment farther west nearby Pittsburg. It is unclear what this trend may indicate about the state now. Philadelphia County has a disproportiontely large unemployment rate.\n\n\nCode\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nrefined_vars = [\n    'Median Household Income',\n    'Per Capita Income',\n    'Median Housing Value',\n    'Population Below Poverty Line',\n    'Percent_Bachelors',\n    'Percent_Poverty',\n    'Unemp Rate',\n    'Percent Local Park'\n]\n\nrefined_correlation_matrix = pa_counties[refined_vars].corr()\n\nplt.figure(figsize=(12, 10))\nsns.heatmap(\n    refined_correlation_matrix, \n    annot=True, \n    cmap='coolwarm', \n    fmt='.2f', \n    linewidths=0.5, \n    cbar_kws={\"shrink\": 0.8, \"label\": \"Correlation Coefficient\"}\n)\nplt.title(\"Correlation Matrix of Key Economic, Demographic, and Park Variables\", fontsize=16, fontweight='bold')\nplt.xticks(rotation=45, ha='right', fontsize=10)\nplt.yticks(fontsize=10)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nThis correlation matrix provides a valuable foundation for identifying areas in Pennsylvania where government resources and policies can be more effectively allocated.\nStrong Positive Relationships Between Income and Education:\n\nMedian Household Income and Percent Bachelors show a strong positive correlation (0.81). This suggests that areas with higher levels of educational attainment tend to have higher household incomes. Policies that promote access to higher education, such as scholarships or workforce training programs, could uplift communities with lower incomes.\nPer Capita Income also correlates positively with Percent Bachelors (0.89), reinforcing this connection.\n\nInverse Relationship Between Poverty and Income:\n\nPercent Poverty has a negative correlation with Median Household Income (-0.61) and Per Capita Income (-0.54). Areas with higher poverty rates are likely to have lower incomes. These areas may need targeted economic development programs, job creation initiatives, or social safety nets to reduce poverty levels.\n\nUnemployment and Poverty:\n\nUnemployment Rate correlates positively with Percent Poverty (0.45) and negatively with income measures (e.g., -0.26 with Median Household Income). High unemployment exacerbates poverty and income disparities. Job training programs and economic revitalization efforts could be prioritized in high-unemployment areas.\n\nPark Accessibility and Socioeconomic Indicators:\n\nPercent Local Park has a modest positive correlation with Median Household Income (0.33) and Per Capita Income (0.43). This suggests that areas with better park access might also have higher incomes, potentially due to historical investment patterns. Expanding park and recreational opportunities in underserved areas could address inequities and improve quality of life.\n\nFocus on Areas of High Poverty and Low Education:\n\nPercent Poverty and Population Below Poverty Line are positively correlated (0.42), highlighting a clear need to target these areas. Additionally, Percent Bachelors has a weaker correlation with poverty measures, indicating that educational access might be a key intervention point.\n\nHousing Value as a Proxy for Wealth:\n\nFinally, median housing value correlates strongly with Median Household Income (0.93) and Percent Bachelors (0.80). Housing value could serve as a proxy for identifying wealthier versus underserved areas. Policies could focus on improving housing affordability in high-poverty regions.\n\nActionable Insights for Policy Implementation:\nTarget High-Poverty, Low-Education Areas:\n\nUse this correlation matrix to identify counties with high poverty rates and low levels of educational attainment. Allocate resources to provide educational programs and improve access to higher education in these regions.\n\nExpand Parks and Recreational Resources:\n\nThe modest correlation between park access and income highlights the potential for parks to serve as equitable community investments. Focus on areas with limited park access to enhance quality of life and public health.\n\nJob Training and Economic Development:\n\nAddress high unemployment areas by investing in job training and economic opportunities. This can help reduce poverty rates and improve overall economic conditions.\n\nConsider Housing Affordability:\n\nExplore housing initiatives in areas where Median Housing Value is low but Percent Poverty is high. This might indicate regions where housing needs renovation or redevelopment.\n\n\n\nCode\nfig, ax = plt.subplots(figsize=(10, 6))\n\nscatter = sns.scatterplot(\n    data=pa_counties, \n    x='Percent_Bachelors', \n    y='Median Household Income', \n    size='Total Population', \n    hue='Unemp Rate',  \n    palette='coolwarm', \n    sizes=(20, 200),  \n    edgecolor='black',\n    linewidth=0.5,\n    alpha=0.8, \n    ax=ax\n)\n\nnorm = plt.Normalize(pa_counties['Unemp Rate'].min(), pa_counties['Unemp Rate'].max())\nsm = plt.cm.ScalarMappable(cmap=\"coolwarm\", norm=norm)\nsm.set_array([])\ncbar = plt.colorbar(sm, ax=ax, aspect=50, shrink=0.75, pad=0.02)\ncbar.set_label(\"Unemployment Rate (%)\")\n\nplt.title(\"Median Income vs. Bachelor's Degree Percent\\nSize Reflects Population, Color Reflects Unemployment Rate\")\nplt.xlabel(\"Percentage of Adults with Bachelor's Degree\")\nplt.ylabel(\"Median Household Income\")\n\nsns.despine()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nThis scatterplot provides insights into the relationships between median household income, percentage of adults with a bachelor’s degree, unemployment rate, and total population at the county level in Pennsylvania. Here’s what this visualization reveals for the analysis:\nMedian Income vs. Bachelor’s Degree Attainment:\n\nCounties with higher percentages of adults holding a bachelor’s degree generally show higher median household incomes. This suggests a strong positive relationship between educational attainment and income levels across Pennsylvania counties.\nSome outliers exist where counties with relatively high education levels still have lower median incomes, indicating other influencing factors like industry structure or cost of living.\n\nUnemployment Rate (Color Gradient):\n\nThe color gradient, ranging from blue (lower unemployment) to red (higher unemployment), highlights that counties with higher bachelor’s degree attainment tend to have lower unemployment rates.\nCounties with higher unemployment rates (darker red points) are concentrated in areas with lower income and bachelor’s degree percentages, emphasizing a need for policy interventions in these regions.\n\nPopulation Distribution (Bubble Size):\n\nThe bubble size represents the total population of each county. Larger counties (e.g., Philadelphia) are concentrated in regions with relatively higher income and education levels but may also face unique challenges.\nSmaller counties are scattered across the spectrum, with varying levels of income, education, and unemployment, indicating that population size alone does not dictate economic outcomes.\n\nImplications for Policy:\n\nEducation and Income: There is a clear need to invest in education as a means to improve median household income. Counties with lower bachelor’s degree attainment could benefit from initiatives to expand access to higher education and workforce development programs.\nUnemployment Interventions: Counties with high unemployment rates and lower educational attainment should be prioritized for job creation programs and retraining initiatives.\nResource Allocation: Larger counties with significant population sizes should not overshadow smaller counties in resource allocation, as many smaller counties face substantial challenges in income, education, and employment.\nOutliers: Policymakers should also focus on outliers where high educational attainment does not translate into higher income or employment, identifying and addressing structural barriers in these regions.\n\nOverall, this visualization reinforces the interconnectedness of income, education, and employment and provides a data-driven foundation for equitable resource allocation across Pennsylvania.\n\n\nCode\npa_counties['Median Household Income'] = pd.to_numeric(pa_counties['Median Household Income'], errors='coerce')\npa_counties['Percent_Bachelors'] = pd.to_numeric(pa_counties['Percent_Bachelors'], errors='coerce')\npa_counties['Percent_Poverty'] = pd.to_numeric(pa_counties['Percent_Poverty'], errors='coerce')\npa_counties['Median Household Income'].fillna(0, inplace=True)\npa_counties['Percent_Bachelors'].fillna(0, inplace=True)\npa_counties['Percent_Poverty'].fillna(0, inplace=True)\n\nscaler = MinMaxScaler()\nvariables = pa_counties[['Median Household Income', 'Percent_Bachelors', 'Percent_Poverty']].copy()\nvariables = pd.DataFrame(scaler.fit_transform(variables), columns=variables.columns)\n\npa_counties['Socioeconomic_Index'] = (\n    variables['Median Household Income'] +\n    variables['Percent_Bachelors'] -\n    variables['Percent_Poverty']\n)\n\npa_counties = pa_counties.to_crs(epsg=2272)\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\nnorm = Normalize(vmin=pa_counties['Socioeconomic_Index'].min(), vmax=pa_counties['Socioeconomic_Index'].max())\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Socioeconomic_Index',\n    cmap='coolwarm',\n    edgecolor='black',\n    linewidth=0.5,\n    norm=norm,\n    legend=True,\n    legend_kwds={'shrink': 0.6, 'label': \"Socioeconomic Index\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='black', markersize=50, label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\nlegend_elements = [Line2D([0], [0], marker='o', color='red', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\nplt.title(\"Socioeconomic Index by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nFinally, this map visualizes the Socioeconomic Index across counties in Pennsylvania. The Socioeconomic Index is a composite score combining three key variables: Median Household Income, Percent of Adults with a Bachelor’s Degree, and Percent of Population Below the Poverty Line.\nKey Findings:\nSpatial Distribution of Socioeconomic Conditions:\n\nHigher Index Scores (e.g., Philadelphia and some surrounding counties):\nThese areas have relatively high household incomes and education levels but lower poverty rates.\nThese counties are likely economic hubs or affluent suburban areas.\nLower Index Scores (e.g., rural central and western counties):\nThese areas exhibit lower household incomes, lower rates of bachelor’s degree attainment, and higher poverty rates.\nThese counties might face systemic socioeconomic challenges and are potential candidates for focused policy intervention.\n\nUrban vs. Rural Divide:\n\nUrban areas like Philadelphia show higher socioeconomic scores due to a concentration of wealth, education, and infrastructure.\nMany rural areas show lower scores, indicating a disparity in resources and opportunities.\n\nRegional Trends:\n\nCounties around Pittsburgh and Harrisburg have moderate scores, reflecting their positions as regional hubs with mixed socioeconomic conditions.\nAreas in the central and northern parts of the state (Appalachian and rural areas) tend to score lower, reinforcing the need for targeted assistance.\n\nIdentifying Priority Areas for Policy Intervention:\n\nUse the lowest-scoring counties as target regions for government programs, such as:\nJob training and economic development initiatives.\nSubsidies or incentives for businesses to invest in these areas.\nEducational programs to increase bachelor’s degree attainment.\n\nResource Allocation:\n\nHighlight high-scoring areas to emphasize where resources are already sufficient.\nFocus on low-scoring counties for resource reallocation (e.g., infrastructure, parks, healthcare).\n\nPolicy Recommendations:\n\nIncorporate the map into presentations or reports to visually justify targeting low-scoring areas.\nRecommend policies tailored to the specific needs of the region (e.g., education-focused policies for areas with low bachelor’s degree attainment, poverty alleviation programs).\n\nStakeholder Engagement:\n\nUse the map to communicate to policymakers and stakeholders where disparities exist.\nHighlight the importance of addressing rural-urban disparities to ensure equitable development across Pennsylvania.",
    "crumbs": [
      "Analysis",
      "Exploratory Spatial Data Analysis"
    ]
  },
  {
    "objectID": "analysis/Untitled-1.html",
    "href": "analysis/Untitled-1.html",
    "title": "Addressing Disparities Across Pennsylvania Counties",
    "section": "",
    "text": "Introduction\nThis analysis aims to guide policymakers in identifying areas of Pennsylvania where resources can be allocated more equitably and effectively. By examining demographic, economic, and environmental data, the goal is to uncover patterns and clusters of counties that highlight disparities and areas of need. The results of this study will provide evidence-based insights to inform resource allocation and policy interventions, particularly in addressing poverty, unemployment, and access to environmental resources like parks.\nResearch Questions\n\nAre demographic, economic, and environmental factors spatially correlated across the state of Pennsylvania?\nHow can the identification of similar county clusters help policymakers equitably allocate resources?\n\nData Setup\nTo answer these research questions, we integrated data from several sources:\nAmerican Community Survey (ACS): Using the Census Bureau’s ACS 5-year estimates API, we gathered key demographic and economic indicators for all counties in Pennsylvania. These include:\n\nTotal population\nMedian household income\nPer capita income\nEducational attainment (e.g., high school graduates, bachelor’s degree holders)\nPoverty rate\nMedian housing value\nRacial demographics (e.g., white, Black, Hispanic populations)\n\nGeospatial Data: We obtained county boundary geometries for Pennsylvania from a GeoJSON file and reprojected the data to Pennsylvania State Plane (EPSG: 2272) for spatial analysis.\nPark Data: Data on local park coverage by county was sourced from the Pennsylvania Department of Conservation and Natural Resources (DCNR). Using park acreage, we calculated the percentage of local park area relative to each county’s total area.\nUnemployment Data: Unemployment rates were extracted from additional datasets and merged with the county-level data.\nData Preparation and Cleaning\n\nMerging Datasets: The ACS data was merged with geospatial county boundaries using unique identifiers. Additional park and unemployment data were integrated using county names.\n\nDerived Variables: Several new variables were calculated to enhance the analysis:\n\nPercent White, Black, Hispanic populations: Calculated as proportions of the total population.\nEducational attainment percentages: Calculated for both high school graduates and bachelor’s degree holders.\nPercent Local Park: Calculated as the proportion of county area covered by local parks.\nHandling Missing Values: Missing values were handled by imputing medians or zeros for specific variables to ensure compatibility for clustering and other analyses.\n\nAnalysis Approach\n\nCorrelation Analysis: A correlation matrix was generated to explore relationships between demographic, economic, and environmental variables.\nSpatial Visualization: Maps were created to visualize spatial patterns in key variables like unemployment rates, poverty levels, and local park coverage.\nClustering Analysis: Using K-means clustering, counties were grouped based on socioeconomic, demographic, and environmental characteristics. This helped identify clusters of counties with similar needs or advantages.\nSocioeconomic Index: A composite index was calculated combining median household income, bachelor’s degree attainment, and poverty rate to rank counties based on overall socioeconomic well-being.\n\nGoal and Application\nThe results of this analysis will:\n\nHighlight disparities across Pennsylvania counties in income, education, environmental access, and unemployment.\nIdentify clusters of counties with shared characteristics to allow targeted policymaking.\nServe as a resource for state and local governments to allocate resources more equitably, focusing on underserved communities.\n\n\nimport pandas as pd\nimport geopandas as gpd\nfrom census import Census\nfrom us import states\nimport matplotlib.pyplot as plt\n\n# API Key\nAPI_KEY = '0da0c882151e10740c1a0a844cf845096bedb565'\nc = Census(API_KEY)\n\n# Fetch data from the ACS API\nacs_data = c.acs5.state_county(\n    fields=[\n        'NAME',  # County name\n        'B01003_001E',  # Total population\n        'B15003_001E',  # Population 25+\n        'B19013_001E',  # Median household income\n        'B19301_001E',  # Per capita income\n        'B01002_001E',  # Median age\n        'B02001_002E',  # White population\n        'B02001_003E',  # African American population\n        'B03001_003E',  # Hispanic population\n        'B15003_017E',  # High school graduates\n        'B15003_022E',  # Bachelor’s degree holders\n        'B25077_001E',  # Median housing value\n        'B17001_002E',  # Population below poverty line\n    ],\n    state_fips=states.PA.fips,\n    county_fips=\"*\"\n)\n\n# Convert the data into a DataFrame\nacs_df = pd.DataFrame(acs_data)\n\n# Label columns (accounting for the 'NAME' column as the first column)\nacs_df.columns = [\n    'County',  # Name of the county\n    'Total Population',\n    'Population Over 25',\n    'Median Household Income', \n    'Per Capita Income', \n    'Median Age', \n    'White Population', \n    'African American Population', \n    'Hispanic Population', \n    'High School Graduates', \n    'Bachelors Degree Holders', \n    'Median Housing Value', \n    'Population Below Poverty Line',\n    'State',  \n    'County_Name'\n]\n\n# Data cleaning\n# Remove ' County, Pennsylvania' from the 'County' column and convert to uppercase\nacs_df['County'] = acs_df['County'].str.replace(\" County, Pennsylvania\", \"\", case=False)\nacs_df['County'] = acs_df['County'].str.upper()\n\n# Drop the 'State' column since it's redundant\nacs_df.drop(columns=['State'], inplace=True)\n\n\n# loading counties\ngeojson_path = \"/Users/macytrout/Desktop/Python Final/PaCounty2024_11.geojson\"\n\ncounty_data = gpd.read_file(geojson_path)\n\n# merge counties to acs\n\ncounties = county_data.merge(\n    acs_df,\n    left_on='FIPS_COUNT',\n    right_on='County_Name',  # Replace with actual column name in acs_df\n    how='left'\n)\n\n\n# Creating new variables\ncounties['Percent_White'] = counties['White Population'] / counties['Total Population']*100 # Percent white\ncounties['Percent_Black'] = counties['African American Population'] / counties['Total Population']*100 # Percent black\ncounties['Percent_Hispanic'] = counties['Hispanic Population'] / counties['Total Population']*100 # Percent hispanic\ncounties['Percent_HS_degrees'] = counties['High School Graduates'] / counties['Total Population']*100 # Percent high school grads\ncounties['Percent_Bachelors'] = counties['Bachelors Degree Holders'] / counties['Population Over 25']*100 # Percent bachelors\ncounties['Percent_Poverty'] = counties['Population Below Poverty Line'] / counties['Population Over 25']*100 # Percent below poverty line\n\n\nparks_path = \"/Users/macytrout/Desktop/Python Final/DCNR_LocalPark202406/DCNR_LocalPark202406.shp\"\nparks_data = gpd.read_file(parks_path)\n\nparks_data = parks_data.drop(columns=['STATUS', 'PARK_FEE', 'ALT_NAME', 'PREMISE_AD', 'PREMISE_CI', 'PREMISE_ZI', 'YEAR_OPEN',\n                                     'PREMISE_CR', 'URL', 'COMMENTS', 'ATV', 'Basketball', 'Bicycling', 'Camping', 'Canoeing_K',\n                                     'CrossCount', 'Disc_Golf', 'Dog_Park', 'Equestrian', 'Fishing', 'Fitness_Eq', 'Golf',\n                                     'Hiking', 'Horseback_', 'Hunting', 'Ice_Fishin', 'Ice_Skatin', 'Motor_Boat', 'LWCF_Restr',\n                                     'Mountain_B', 'Natural_Wi', 'Organized_', 'Parking', 'Pavilion', 'Pets_Allow', 'Playground',\n                                     'Restrooms', 'Rock_Climb', 'Scenic_Vie', 'Sledding', 'Sports_Fie', 'Swimming', 'Tennis_Cou',\n                                     'Theatre_Am', 'Trails', 'Visitor_Ce', 'White_Wate', 'Wildlife_W', 'Amenity_Co', 'Feedback_l',\n                                     'Skate_Park'])\n\nupdated_parks = parks_data.groupby('PREMISE_CO')['Acres'].sum().reset_index()\nupdated_parks['park_sq_mi'] = updated_parks['Acres'] / 640\nupdated_parks['PREMISE_CO'] = updated_parks['PREMISE_CO'].str.upper()\n\nparks = counties.merge(\n    updated_parks,\n    left_on='County',  # Column in pa_counties to merge on\n    right_on='PREMISE_CO',  # Column in updated_parks to merge on\n    how='left')\n\nparks['Percent Local Park'] = parks['park_sq_mi'] / parks['AREA_SQ_MI'] * 100\n\n\nunemp_data = pd.read_csv(\"/Users/macytrout/Desktop/Python Final/unemp.csv\")\nunemp_data['County'] = unemp_data['County'].str.replace('County', '', case=False).str.strip()\nunemp_data['County'] = unemp_data['County'].str.upper()\n\npa_counties = unemp_data.merge(\n    parks,\n    left_on='County',  # Column in pa_counties to merge on\n    right_on='County',  # Column in updated_parks to merge on\n    how='left')\n\npa_counties.rename(columns={\"Value (Percent)\": \"Unemp Rate\"}, inplace=True)\n\npa_counties.head()\n\n\n\n\n\n\n\n\nCounty\nFIPS\nUnemp Rate\nSOUND\nMSLINK\nMAINT_CTY_\nAREA\nCOUNTY_PER\nCOUNTY_N_1\nNOTE_FILE\n...\nPercent_White\nPercent_Black\nPercent_Hispanic\nPercent_HS_degrees\nPercent_Bachelors\nPercent_Poverty\nPREMISE_CO\nAcres\npark_sq_mi\nPercent Local Park\n\n\n\n\n0\nPHILADELPHIA\n42101.0\n8.6\nNaN\n67.0\n5\n0.0\n0.0\n67.0\nNaN\n...\n37.086181\n40.101920\n15.674225\n18.039201\n18.804105\n32.275883\nPHILADELPHIA\n14743.428866\n23.036608\n16.054318\n\n\n1\nPIKE\n42103.0\n8.5\nNaN\n51.0\n4\n0.0\n0.0\n51.0\nNaN\n...\n82.292020\n6.047868\n11.946573\n21.893010\n15.568566\n13.181716\nPIKE\n1680.749924\n2.626172\n0.462356\n\n\n2\nFAYETTE\n42051.0\n7.2\nNaN\n26.0\n1\n0.0\n0.0\n26.0\nNaN\n...\n90.477118\n4.233863\n1.386109\n30.989666\n12.285337\n21.231176\nFAYETTE\n3348.768523\n5.232451\n0.655030\n\n\n3\nCAMERON\n42023.0\n7.1\nNaN\n12.0\n4\n0.0\n0.0\n12.0\nNaN\n...\n95.039683\n0.044092\n2.006173\n35.361552\n8.688147\n19.390104\nCAMERON\n96.706578\n0.151104\n0.037816\n\n\n4\nCARBON\n42025.0\n6.9\nNaN\n13.0\n2\n0.0\n0.0\n13.0\nNaN\n...\n91.753053\n2.433172\n5.981421\n29.374942\n12.482574\n15.711937\nCARBON\n3632.510434\n5.675798\n1.460450\n\n\n\n\n5 rows × 48 columns\n\n\n\n\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure pa_counties is a GeoDataFrame\nif 'geometry' not in pa_counties.columns:\n    raise ValueError(\"The 'pa_counties' DataFrame must have a 'geometry' column.\")\n\npa_counties = gpd.GeoDataFrame(pa_counties, geometry=pa_counties['geometry'])\n\n# Ensure the GeoDataFrame has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Median Household Income for color scaling\nnorm = Normalize(vmin=pa_counties['Median Household Income'].min(), vmax=pa_counties['Median Household Income'].max())\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Median Household Income',\n    cmap='plasma',  # Darker colormap\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Median Income ($)\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Median Household Income by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Median Household Income for color scaling\nnorm = Normalize(vmin=pa_counties['Median Household Income'].min(), vmax=pa_counties['Median Household Income'].max())\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Median Household Income',\n    cmap='plasma',  # Updated colormap for income\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Median Household Income ($)\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add a dark basemap for better contrast\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\n# Add a title and format the map\nplt.title(\"Median Household Income by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show the map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Percent Poverty for color scaling\nnorm = Normalize(vmin=pa_counties['Percent_Poverty'].min(), vmax=pa_counties['Percent_Poverty'].max())\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Percent_Poverty',\n    cmap='plasma',  # Updated colormap\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Below Poverty Line\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Population Below Poverty Line by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Median Housing Value for color scaling\nnorm = Normalize(vmin=pa_counties['Median Housing Value'].min(), vmax=pa_counties['Median Housing Value'].max() * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Median Housing Value',\n    cmap='plasma',  # Updated colormap for better visibility\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Median Housing Value ($)\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Median Housing Value by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Percent African American for color scaling\nnorm = Normalize(vmin=pa_counties['Percent_Black'].min(), vmax=pa_counties['Percent_Black'].max() * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Percent_Black',\n    cmap='plasma',  # Updated colormap for better visibility\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent African American\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Percent African American by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Percent Bachelors for color scaling\nnorm = Normalize(vmin=pa_counties['Percent_Bachelors'].min(), vmax=pa_counties['Percent_Bachelors'].max() * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Percent_Bachelors',\n    cmap='viridis',  # Updated colormap for better visualization\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Bachelors Degree\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Percent Bachelors Degrees by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Percent Local Park for color scaling\nnorm = Normalize(vmin=pa_counties['Percent Local Park'].min(), vmax=pa_counties['Percent Local Park'].max() * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Percent Local Park',\n    cmap='viridis',  # Colormap for better visualization\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Local Park\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add dark-themed basemap\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\n# Add title and finalize the layout\nplt.title(\"Percent Local Park by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize unemployment data for color mapping\nmin_unemp = pa_counties['Unemp Rate'].min()\nmax_unemp = pa_counties['Unemp Rate'].max()\nnorm = Normalize(vmin=min_unemp, vmax=max_unemp * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Unemp Rate',\n    cmap='viridis',\n    edgecolor='black',\n    linewidth=0.5,\n    legend=False,\n    norm=norm,\n    ax=ax\n)\n\n# Add a colorbar manually\nsm = plt.cm.ScalarMappable(cmap='viridis', norm=norm)\nsm.set_array([])\ncbar = fig.colorbar(sm, ax=ax)\ncbar.set_label(\"Unemployment Rate (%)\", fontsize=10, labelpad=10)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='red', markersize=50, label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add basemap\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='red', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Unemployment Rate by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Refined list of variables for correlation analysis, including park-related variable\nrefined_vars = [\n    'Median Household Income',\n    'Per Capita Income',\n    'Median Housing Value',\n    'Population Below Poverty Line',\n    'Percent_Bachelors',\n    'Percent_Poverty',\n    'Unemp Rate',\n    'Percent Local Park'\n]\n\n# Create a correlation matrix for the refined variables\nrefined_correlation_matrix = pa_counties[refined_vars].corr()\n\n# Plot the heatmap\nplt.figure(figsize=(12, 10))\nsns.heatmap(\n    refined_correlation_matrix, \n    annot=True, \n    cmap='coolwarm', \n    fmt='.2f', \n    linewidths=0.5, \n    cbar_kws={\"shrink\": 0.8, \"label\": \"Correlation Coefficient\"}\n)\nplt.title(\"Correlation Matrix of Key Economic, Demographic, and Park Variables\", fontsize=16, fontweight='bold')\nplt.xticks(rotation=45, ha='right', fontsize=10)\nplt.yticks(fontsize=10)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nThis correlation matrix provides a valuable foundation for identifying areas in Pennsylvania where government resources and policies can be more effectively allocated.\nKey Insights from the Correlation Matrix:\nStrong Positive Relationships Between Income and Education:\n\nMedian Household Income and Percent Bachelors show a strong positive correlation (0.90). This suggests that areas with higher levels of educational attainment tend to have higher household incomes. Policies that promote access to higher education, such as scholarships or workforce training programs, could uplift communities with lower incomes.\nPer Capita Income also correlates positively with Percent Bachelors (0.89), reinforcing this connection.\n\nInverse Relationship Between Poverty and Income:\n\nPercent Poverty has a negative correlation with Median Household Income (-0.44) and Per Capita Income (-0.54). Areas with higher poverty rates are likely to have lower incomes. These areas may need targeted economic development programs, job creation initiatives, or social safety nets to reduce poverty levels.\n\nUnemployment and Poverty:\n\nUnemployment Rate correlates positively with Percent Poverty (0.45) and negatively with income measures (e.g., -0.24 with Median Household Income). High unemployment exacerbates poverty and income disparities. Job training programs and economic revitalization efforts could be prioritized in high-unemployment areas.\n\nPark Accessibility and Socioeconomic Indicators:\n\nPercent Local Park has a modest positive correlation with Median Household Income (0.26) and Per Capita Income (0.43). This suggests that areas with better park access might also have higher incomes, potentially due to historical investment patterns. Expanding park and recreational opportunities in underserved areas could address inequities and improve quality of life.\n\nFocus on Areas of High Poverty and Low Education:\n\nPercent Poverty and Population Below Poverty Line are positively correlated (0.42), highlighting a clear need to target these areas. Additionally, Percent Bachelors has a weaker correlation with poverty measures, indicating that educational access might be a key intervention point.\n\nHousing Value as a Proxy for Wealth:\n\nMedian Housing Value correlates strongly with Median Household Income (0.93) and Percent Bachelors (0.80). Housing value could serve as a proxy for identifying wealthier versus underserved areas. Policies could focus on improving housing affordability in high-poverty regions.\n\nActionable Insights for Policy Implementation:\nTarget High-Poverty, Low-Education Areas:\n\nUse this correlation matrix to identify counties with high poverty rates and low levels of educational attainment. Allocate resources to provide educational programs and improve access to higher education in these regions.\n\nExpand Parks and Recreational Resources:\n\nThe modest correlation between park access and income highlights the potential for parks to serve as equitable community investments. Focus on areas with limited park access to enhance quality of life and public health.\n\nJob Training and Economic Development:\n\nAddress high unemployment areas by investing in job training and economic opportunities. This can help reduce poverty rates and improve overall economic conditions.\n\nConsider Housing Affordability:\n\nExplore housing initiatives in areas where Median Housing Value is low but Percent Poverty is high. This might indicate regions where housing needs renovation or redevelopment.\n\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nscatter = sns.scatterplot(\n    data=pa_counties, \n    x='Percent_Bachelors', \n    y='Median Household Income', \n    size='Total Population', \n    hue='Unemp Rate',  # Change hue to Unemployment Rate\n    palette='coolwarm', \n    sizes=(20, 200),  \n    edgecolor='black',\n    linewidth=0.5,\n    alpha=0.8, \n    ax=ax\n)\n\nnorm = plt.Normalize(pa_counties['Unemp Rate'].min(), pa_counties['Unemp Rate'].max())\nsm = plt.cm.ScalarMappable(cmap=\"coolwarm\", norm=norm)\nsm.set_array([])\ncbar = plt.colorbar(sm, ax=ax, aspect=50, shrink=0.75, pad=0.02)\ncbar.set_label(\"Unemployment Rate (%)\")\n\nplt.title(\"Median Income vs. Bachelor's Degree Percent\\nSize Reflects Population, Color Reflects Unemployment Rate\")\nplt.xlabel(\"Percentage of Adults with Bachelor's Degree\")\nplt.ylabel(\"Median Household Income\")\n\nsns.despine()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nThis scatterplot provides insights into the relationships between median household income, percentage of adults with a bachelor’s degree, unemployment rate, and total population at the county level in Pennsylvania. Here’s what this visualization reveals for the analysis:\nMedian Income vs. Bachelor’s Degree Attainment:\n\nCounties with higher percentages of adults holding a bachelor’s degree generally show higher median household incomes. This suggests a strong positive relationship between educational attainment and income levels across Pennsylvania counties.\nSome outliers exist where counties with relatively high education levels still have lower median incomes, indicating other influencing factors like industry structure or cost of living.\n\nUnemployment Rate (Color Gradient):\n\nThe color gradient, ranging from blue (lower unemployment) to red (higher unemployment), highlights that counties with higher bachelor’s degree attainment tend to have lower unemployment rates.\nCounties with higher unemployment rates (darker red points) are concentrated in areas with lower income and bachelor’s degree percentages, emphasizing a need for policy interventions in these regions.\n\nPopulation Distribution (Bubble Size):\n\nThe bubble size represents the total population of each county. Larger counties (e.g., Philadelphia) are concentrated in regions with relatively higher income and education levels but may also face unique challenges.\nSmaller counties are scattered across the spectrum, with varying levels of income, education, and unemployment, indicating that population size alone does not dictate economic outcomes.\n\nImplications for Policy:\n\nEducation and Income: There is a clear need to invest in education as a means to improve median household income. Counties with lower bachelor’s degree attainment could benefit from initiatives to expand access to higher education and workforce development programs.\nUnemployment Interventions: Counties with high unemployment rates and lower educational attainment should be prioritized for job creation programs and retraining initiatives.\nResource Allocation: Larger counties with significant population sizes should not overshadow smaller counties in resource allocation, as many smaller counties face substantial challenges in income, education, and employment.\nOutliers: Policymakers should also focus on outliers where high educational attainment does not translate into higher income or employment, identifying and addressing structural barriers in these regions.\n\nOverall, this visualization reinforces the interconnectedness of income, education, and employment and provides a data-driven foundation for equitable resource allocation across Pennsylvania.\n\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nfrom sklearn.preprocessing import MinMaxScaler\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure all variables are numeric and handle NaN values\npa_counties['Median Household Income'] = pd.to_numeric(pa_counties['Median Household Income'], errors='coerce')\npa_counties['Percent_Bachelors'] = pd.to_numeric(pa_counties['Percent_Bachelors'], errors='coerce')\npa_counties['Percent_Poverty'] = pd.to_numeric(pa_counties['Percent_Poverty'], errors='coerce')\n\n# Fill NaN values\npa_counties['Median Household Income'].fillna(0, inplace=True)\npa_counties['Percent_Bachelors'].fillna(0, inplace=True)\npa_counties['Percent_Poverty'].fillna(0, inplace=True)\n\n# Normalize variables\nscaler = MinMaxScaler()\nvariables = pa_counties[['Median Household Income', 'Percent_Bachelors', 'Percent_Poverty']].copy()\nvariables = pd.DataFrame(scaler.fit_transform(variables), columns=variables.columns)\n\n# Calculate Socioeconomic Index\npa_counties['Socioeconomic_Index'] = (\n    variables['Median Household Income'] +\n    variables['Percent_Bachelors'] -\n    variables['Percent_Poverty']\n)\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Key cities with corrected coordinates\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize the Socioeconomic Index for better visualization\nnorm = Normalize(vmin=pa_counties['Socioeconomic_Index'].min(), vmax=pa_counties['Socioeconomic_Index'].max())\n\n# Create the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\n# Plot counties with Socioeconomic Index\npa_counties.plot(\n    column='Socioeconomic_Index',\n    cmap='coolwarm',\n    edgecolor='black',\n    linewidth=0.5,\n    norm=norm,\n    legend=True,\n    legend_kwds={'shrink': 0.6, 'label': \"Socioeconomic Index\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='red', markersize=50, label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add basemap for context\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for key cities\nlegend_elements = [Line2D([0], [0], marker='o', color='red', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\n# Add title and clean up\nplt.title(\"Socioeconomic Index by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nThis map visualizes the Socioeconomic Index across counties in Pennsylvania, with key cities (Philadelphia, Harrisburg, Pittsburgh) highlighted for context. The Socioeconomic Index is a composite score combining three key variables: Median Household Income, Percent of Adults with a Bachelor’s Degree, and Percent of Population Below the Poverty Line.\nWhat the Map Tells Us\nSpatial Distribution of Socioeconomic Conditions:\n\nHigher Index Scores (e.g., Philadelphia and some surrounding counties):\nThese areas have relatively high household incomes and education levels but lower poverty rates.\nThese counties are likely economic hubs or affluent suburban areas.\nLower Index Scores (e.g., rural central and western counties):\nThese areas exhibit lower household incomes, lower rates of bachelor’s degree attainment, and higher poverty rates.\nThese counties might face systemic socioeconomic challenges and are potential candidates for focused policy intervention.\n\nUrban vs. Rural Divide:\n\nUrban areas like Philadelphia show higher socioeconomic scores due to a concentration of wealth, education, and infrastructure.\nMany rural areas show lower scores, indicating a disparity in resources and opportunities.\n\nRegional Trends:\n\nCounties around Pittsburgh and Harrisburg have moderate scores, reflecting their positions as regional hubs with mixed socioeconomic conditions.\nAreas in the central and northern parts of the state (Appalachian and rural areas) tend to score lower, reinforcing the need for targeted assistance.\n\nIdentifying Priority Areas for Policy Intervention:\n\nUse the lowest-scoring counties as target regions for government programs, such as:\nJob training and economic development initiatives.\nSubsidies or incentives for businesses to invest in these areas.\nEducational programs to increase bachelor’s degree attainment.\n\nResource Allocation:\n\nHighlight high-scoring areas to emphasize where resources are already sufficient.\nFocus on low-scoring counties for resource reallocation (e.g., infrastructure, parks, healthcare).\n\nComparison with Other Indicators:\n\nOverlay the Socioeconomic Index with other variables like unemployment rates or park access to identify counties with compounding disadvantages.\nFor instance, counties with low socioeconomic scores and high unemployment should be prioritized for job creation policies.\n\nPolicy Recommendations:\n\nIncorporate the map into presentations or reports to visually justify targeting low-scoring areas.\nRecommend policies tailored to the specific needs of the region (e.g., education-focused policies for areas with low bachelor’s degree attainment, poverty alleviation programs).\n\nStakeholder Engagement:\n\nUse the map to communicate to policymakers and stakeholders where disparities exist.\nHighlight the importance of addressing rural-urban disparities to ensure equitable development across Pennsylvania.\n\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nfrom matplotlib.lines import Line2D\n\n# Variables for clustering\nclustering_vars = [\n    'Socioeconomic_Index', \n    'Median Household Income', \n    'Percent_Bachelors', \n    'Percent_Poverty', \n    'Percent Local Park',\n    'Unemp Rate'  # Added Unemployment Rate\n]\n\n# Ensure numeric and handle missing values\npa_counties[clustering_vars] = pa_counties[clustering_vars].apply(pd.to_numeric, errors='coerce')\n\n# Fill NaNs with the median of each column\nfor var in clustering_vars:\n    pa_counties[var].fillna(pa_counties[var].median(), inplace=True)\n\n# Normalize variables\nscaler = StandardScaler()\npa_counties[clustering_vars] = scaler.fit_transform(pa_counties[clustering_vars])\n\n# Perform K-means clustering\nkmeans = KMeans(n_clusters=4, random_state=42)\npa_counties['Cluster'] = kmeans.fit_predict(pa_counties[clustering_vars])\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Plot map with clustering\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    column='Cluster',\n    cmap='tab10',\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    ax=ax\n)\n\n# Add key cities\ncities_gdf.plot(ax=ax, color='white', edgecolor='black', markersize=50, label=\"Key Cities\")\n\n# Annotate city names\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add basemap for context\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\n# Add title and clean up axes\nplt.title(\"County Clusters Based on Socioeconomic, Demographic, Park, and Unemployment Variables\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n# Print summary of clusters\ncluster_summary = pa_counties.groupby('Cluster')[clustering_vars].mean()\nprint(\"Cluster Summary:\")\nprint(cluster_summary)\n\n/Users/macytrout/miniforge3/envs/musa-550-fall-2023/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:1412: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  super()._check_params_vs_input(X, default_n_init=10)\n\n\n\n\n\n\n\n\n\nCluster Summary:\n         Socioeconomic_Index  Median Household Income  Percent_Bachelors  \\\nCluster                                                                    \n0                   1.763595                 1.189923           1.516475   \n1                  -0.145801                 0.096878          -0.041046   \n2                  -1.443756                -2.611741          -2.162843   \n3                  -1.274219                -0.135270           0.716211   \n\n         Percent_Poverty  Percent Local Park  Unemp Rate  \nCluster                                                   \n0              -0.419184            1.108642   -0.276491  \n1               0.332234           -0.296993    0.005827  \n2              -2.383303           -0.326782   -0.043811  \n3               3.021300            6.427039    3.027565  \n\n\nTalking Points for Policymakers: Suggestions Based on Cluster Analysis\nThis analysis categorizes Pennsylvania counties into four distinct clusters based on their socioeconomic index, median household income, educational attainment, poverty rates, unemployment, and local park coverage. These clusters help us identify areas where government resources could be strategically allocated to address disparities.\nCluster Insights and Policy Recommendations\nCluster 0: Prosperous Counties\nCharacteristics:\n\nHigh socioeconomic index.\nAbove-average household income and educational attainment.\nLow poverty and unemployment rates.\nStrong local park coverage.\n\nPolicy Recommendations:\n\nThese counties are thriving. Policies should focus on maintaining existing resources and infrastructure.\nExpand innovative programs such as workforce training for high-skill industries and renewable energy investments to keep these areas competitive.\n\nCluster 1: Stable but Vulnerable Counties\nCharacteristics:\n\nModerate socioeconomic indicators.\nMedian household income and education slightly below Cluster 0.\nPoverty and unemployment are modest but rising in some areas.\nBelow-average local park coverage.\n\nPolicy Recommendations:\n\nInvest in green infrastructure and park creation to improve quality of life and attract economic growth.\nSupport small business incentives and workforce training programs to bolster economic resilience.\nTarget housing affordability programs to address growing economic pressures.\n\nCluster 2: Economically Struggling Rural Counties\nCharacteristics:\n\nLow socioeconomic index, median household income, and educational attainment.\nPoverty is present but less concentrated (likely in rural areas).\nLimited local park coverage, suggesting a lack of recreational opportunities.\n\nPolicy Recommendations:\n\nPrioritize economic development programs, including small business grants and rural broadband expansion.\nExpand access to higher education and job training programs to increase educational attainment.\nImprove park and green space accessibility to enhance community well-being and attract residents and visitors.\n\nCluster 3: Counties in Crisis\nCharacteristics:\n\nLowest socioeconomic index, coupled with the highest poverty and unemployment rates.\nSurprisingly high local park coverage, but these areas may lack the capacity to maintain parks effectively.\n\nPolicy Recommendations:\n\nImplement immediate poverty alleviation programs, including job creation initiatives and affordable housing.\nProvide direct state funding to maintain parks and utilize them for community-building activities.\nFocus on long-term educational and workforce development to address systemic poverty and unemployment.\n\nBroader Policy Implications\nTargeted Resource Allocation:\n\nClusters 2 and 3 should be prioritized for state and federal resources to address entrenched economic disparities.\nParks in Cluster 3, while abundant, should be maintained through state support to ensure accessibility and functionality.\n\nRegional Collaboration:\n\nUse thriving counties in Cluster 0 as models for economic development and park infrastructure improvements in struggling areas.\nEquity in Policy Implementation:\nEnsure that policies account for the unique challenges of rural areas (Cluster 2) versus more urbanized high-poverty areas (Cluster 3).\n\nThis cluster analysis highlights the need for nuanced, data-driven policies tailored to the strengths and challenges of each cluster. By targeting investments where they are most needed, the state can foster more equitable development and improve outcomes for residents statewide.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Group by cluster and calculate the mean for relevant variables\ncluster_summary = pa_counties.groupby('Cluster')[[\n    'Median Household Income', \n    'Population Below Poverty Line', \n    'Percent_Bachelors', \n    'Percent Local Park',\n    'Unemp Rate',\n    'Total Population'\n]].mean()\n\n# Rename columns for clarity\ncluster_summary = cluster_summary.rename(columns={\n    'Median Household Income': 'Median Household Income ($)',\n    'Population Below Poverty Line': 'Population Below Poverty Line (%)',\n    'Percent_Bachelors': \"Bachelor's Degree Holders (%)\",\n    'Percent Local Park': 'Local Park Coverage (%)',\n    'Unemp Rate': 'Unemployment Rate (%)',\n    'Total Population': 'Total Population'\n})\n\nprint(\"Within-Cluster Characteristics Summary:\")\nprint(cluster_summary)\n\n# Set dark theme for the plots\nsns.set_theme(style=\"darkgrid\", rc={\"axes.facecolor\": \"#222222\", \"figure.facecolor\": \"#222222\"})\n\nsns.set_palette(\"bright\")\ncolors = sns.color_palette(\"bright\", n_colors=len(cluster_summary))\n\n# Create bar plots for each variable\nfig, axes = plt.subplots(2, 3, figsize=(15, 8))\nfig.suptitle(\"Cluster Characteristics by Demographic, Economic, and Environmental Indicators\", fontsize=16, fontweight='bold', color='white')\n\nvariables = cluster_summary.columns\nfor ax, var in zip(axes.flatten(), variables):\n    bars = cluster_summary[var].plot(kind='bar', ax=ax, color=colors, width=0.8)\n    ax.set_title(var, fontsize=12, fontweight='bold', color='white')\n    ax.set_xlabel(\"Cluster\", fontsize=10, color='white')\n    ax.set_ylabel(\"Average Value\", fontsize=10, color='white')\n    ax.tick_params(axis='x', rotation=0, colors='white')\n    ax.tick_params(axis='y', colors='white')\n    ax.grid(axis='y', linestyle='--', alpha=0.5, color='gray')  # Add gridlines\n\n    # Add value labels on top of bars\n    for bar in bars.patches:\n        ax.text(\n            bar.get_x() + bar.get_width() / 2, \n            bar.get_height() + 0.02 * max(cluster_summary[var]), \n            f\"{bar.get_height():.2f}\", \n            ha='center', fontsize=8, color='white'\n        )\n\n# Hide any unused subplots\nfor ax in axes.flatten()[len(variables):]:\n    ax.axis(\"off\")\n    ax.set_facecolor('#222222')\n\n# Adjust layout for better spacing\nplt.tight_layout(rect=[0, 0, 1, 0.92])\nplt.show()\n\nWithin-Cluster Characteristics Summary:\n         Median Household Income ($)  Population Below Poverty Line (%)  \\\nCluster                                                                   \n0                           1.189923                       43325.454545   \n1                           0.096878                       11891.781818   \n2                          -2.611741                                NaN   \n3                          -0.135270                      351811.000000   \n\n         Bachelor's Degree Holders (%)  Local Park Coverage (%)  \\\nCluster                                                           \n0                             1.516475                 1.108642   \n1                            -0.041046                -0.296993   \n2                            -2.162843                -0.326782   \n3                             0.716211                 6.427039   \n\n         Unemployment Rate (%)  Total Population  \nCluster                                           \n0                    -0.276491      5.241574e+05  \n1                     0.005827      1.023685e+05  \n2                    -0.043811               NaN  \n3                     3.027565      1.593208e+06  \n\n\n\n\n\n\n\n\n\nBased on the clustering analysis and visualizations of demographic, economic, and environmental characteristics across Pennsylvania counties, here are the key insights and policy recommendations:\nCluster 0 (Blue)\n\nCharacteristics: This cluster shows high median household income and bachelor’s degree attainment, relatively low poverty rates, and moderate park coverage. Unemployment rates are below average, and the total population is mid-sized.\nPolicy Recommendation: Counties in this cluster appear economically stable with access to educational attainment and moderate green spaces. Policies could focus on maintaining economic resilience and enhancing recreational spaces to sustain quality of life.\n\nCluster 1 (Orange)\n\nCharacteristics: This cluster has average household income and unemployment rates, relatively lower bachelor’s degree attainment, and minimal park coverage. Poverty rates are slightly above the mean.\nPolicy Recommendation: These areas would benefit from educational initiatives to increase higher education attainment and investments in green infrastructure, such as parks, to improve community well-being and attract residents.\n\nCluster 2 (Green)\n\nCharacteristics: This cluster faces significant economic challenges, with the lowest median income, high poverty levels, and extremely low educational attainment. Park coverage is minimal, and unemployment rates are average.\n\nPolicy Recommendation: These counties should be prioritized for resource allocation. Policies should include:\n\nEconomic development programs, such as job creation initiatives and small business support.\nExpansion of higher education opportunities and workforce training programs.\nInvestment in parks and green spaces to provide recreational opportunities and improve quality of life.\n\nCluster 3 (Red)\nCharacteristics: This cluster is defined by a large population and extreme disparities. It has the highest unemployment rate and a very high poverty rate, but also notable park coverage and higher bachelor’s degree attainment.\nPolicy Recommendation: Policies should aim to reduce poverty and unemployment, focusing on:\n\nWorkforce development and job creation initiatives.\nSupport for affordable housing and anti-poverty programs.\nLeveraging existing park resources to promote tourism and community activities.\n\nSummary and Policy Focus\nThe clusters highlight areas of Pennsylvania that vary widely in socioeconomic and environmental characteristics:\n\nClusters 2 and 3 are clear areas of need, with high poverty and unemployment rates, calling for targeted interventions.\nClusters 0 and 1, while more stable, would benefit from strategic investments in green infrastructure and educational initiatives to maintain and enhance their resilience.\n\nThis analysis helps policymakers identify and address disparities across counties, ensuring equitable distribution of resources and tailored policy actions to foster economic and social stability statewide."
  },
  {
    "objectID": "analysis/Untitled-2.html",
    "href": "analysis/Untitled-2.html",
    "title": "Addressing Disparities Across Pennsylvania Counties",
    "section": "",
    "text": "Introduction\nThis analysis aims to guide policymakers in identifying areas of Pennsylvania where resources can be allocated more equitably and effectively. By examining demographic, economic, and environmental data, the goal is to uncover patterns and clusters of counties that highlight disparities and areas of need. The results of this study will provide evidence-based insights to inform resource allocation and policy interventions, particularly in addressing poverty, unemployment, and access to environmental resources like parks.\nResearch Questions\n\nAre demographic, economic, and environmental factors spatially correlated across the state of Pennsylvania?\nHow can the identification of similar county clusters help policymakers equitably allocate resources?\n\nData Setup\nTo answer these research questions, we integrated data from several sources:\nAmerican Community Survey (ACS): Using the Census Bureau’s ACS 5-year estimates API, we gathered key demographic and economic indicators for all counties in Pennsylvania. These include:\n\nTotal population\nMedian household income\nPer capita income\nEducational attainment (e.g., high school graduates, bachelor’s degree holders)\nPoverty rate\nMedian housing value\nRacial demographics (e.g., white, Black, Hispanic populations)\n\nGeospatial Data: We obtained county boundary geometries for Pennsylvania from a GeoJSON file and reprojected the data to Pennsylvania State Plane (EPSG: 2272) for spatial analysis.\nPark Data: Data on local park coverage by county was sourced from the Pennsylvania Department of Conservation and Natural Resources (DCNR). Using park acreage, we calculated the percentage of local park area relative to each county’s total area.\nUnemployment Data: Unemployment rates were extracted from additional datasets and merged with the county-level data.\nData Preparation and Cleaning\n\nMerging Datasets: The ACS data was merged with geospatial county boundaries using unique identifiers. Additional park and unemployment data were integrated using county names.\n\nDerived Variables: Several new variables were calculated to enhance the analysis:\n\nPercent White, Black, Hispanic populations: Calculated as proportions of the total population.\nEducational attainment percentages: Calculated for both high school graduates and bachelor’s degree holders.\nPercent Local Park: Calculated as the proportion of county area covered by local parks.\nHandling Missing Values: Missing values were handled by imputing medians or zeros for specific variables to ensure compatibility for clustering and other analyses.\n\nAnalysis Approach\n\nCorrelation Analysis: A correlation matrix was generated to explore relationships between demographic, economic, and environmental variables.\nSpatial Visualization: Maps were created to visualize spatial patterns in key variables like unemployment rates, poverty levels, and local park coverage.\nClustering Analysis: Using K-means clustering, counties were grouped based on socioeconomic, demographic, and environmental characteristics. This helped identify clusters of counties with similar needs or advantages.\nSocioeconomic Index: A composite index was calculated combining median household income, bachelor’s degree attainment, and poverty rate to rank counties based on overall socioeconomic well-being.\n\nGoal and Application\nThe results of this analysis will:\n\nHighlight disparities across Pennsylvania counties in income, education, environmental access, and unemployment.\nIdentify clusters of counties with shared characteristics to allow targeted policymaking.\nServe as a resource for state and local governments to allocate resources more equitably, focusing on underserved communities.\n\n\nimport pandas as pd\nimport geopandas as gpd\nfrom census import Census\nfrom us import states\nimport matplotlib.pyplot as plt\n\n\nAPI_KEY = '0da0c882151e10740c1a0a844cf845096bedb565'\nc = Census(API_KEY)\n\n\nacs_data = c.acs5.state_county(\n    fields=[\n        'NAME',  # County name\n        'B01003_001E',  # Total population\n        'B15003_001E',  # Population 25+\n        'B19013_001E',  # Median household income\n        'B19301_001E',  # Per capita income\n        'B01002_001E',  # Median age\n        'B02001_002E',  # White population\n        'B02001_003E',  # African American population\n        'B03001_003E',  # Hispanic population\n        'B15003_017E',  # High school graduates\n        'B15003_022E',  # Bachelor’s degree holders\n        'B25077_001E',  # Median housing value\n        'B17001_002E',  # Population below poverty line\n    ],\n    state_fips=states.PA.fips,\n    county_fips=\"*\"\n)\n\n\nacs_df = pd.DataFrame(acs_data)\n\n\nacs_df.columns = [\n    'County', \n    'Total Population',\n    'Population Over 25',\n    'Median Household Income', \n    'Per Capita Income', \n    'Median Age', \n    'White Population', \n    'African American Population', \n    'Hispanic Population', \n    'High School Graduates', \n    'Bachelors Degree Holders', \n    'Median Housing Value', \n    'Population Below Poverty Line',\n    'State',  \n    'County_Name'\n]\n\n\nacs_df['County'] = acs_df['County'].str.replace(\" County, Pennsylvania\", \"\", case=False)\nacs_df['County'] = acs_df['County'].str.upper()\n\nacs_df.drop(columns=['State'], inplace=True)\n\n\n# loading counties\ngeojson_path = \"/Users/macytrout/Desktop/Python Final/PaCounty2024_11.geojson\"\n\ncounty_data = gpd.read_file(geojson_path)\n\n# merge counties to acs\n\ncounties = county_data.merge(\n    acs_df,\n    left_on='FIPS_COUNT',\n    right_on='County_Name',  # Replace with actual column name in acs_df\n    how='left'\n)\n\n\n# Creating new variables\ncounties['Percent_White'] = counties['White Population'] / counties['Total Population']*100 # Percent white\ncounties['Percent_Black'] = counties['African American Population'] / counties['Total Population']*100 # Percent black\ncounties['Percent_Hispanic'] = counties['Hispanic Population'] / counties['Total Population']*100 # Percent hispanic\ncounties['Percent_HS_degrees'] = counties['High School Graduates'] / counties['Total Population']*100 # Percent high school grads\ncounties['Percent_Bachelors'] = counties['Bachelors Degree Holders'] / counties['Population Over 25']*100 # Percent bachelors\ncounties['Percent_Poverty'] = counties['Population Below Poverty Line'] / counties['Population Over 25']*100 # Percent below poverty line\n\n\nparks_path = \"/Users/macytrout/Desktop/Python Final/DCNR_LocalPark202406/DCNR_LocalPark202406.shp\"\nparks_data = gpd.read_file(parks_path)\n\nparks_data = parks_data.drop(columns=['STATUS', 'PARK_FEE', 'ALT_NAME', 'PREMISE_AD', 'PREMISE_CI', 'PREMISE_ZI', 'YEAR_OPEN',\n                                     'PREMISE_CR', 'URL', 'COMMENTS', 'ATV', 'Basketball', 'Bicycling', 'Camping', 'Canoeing_K',\n                                     'CrossCount', 'Disc_Golf', 'Dog_Park', 'Equestrian', 'Fishing', 'Fitness_Eq', 'Golf',\n                                     'Hiking', 'Horseback_', 'Hunting', 'Ice_Fishin', 'Ice_Skatin', 'Motor_Boat', 'LWCF_Restr',\n                                     'Mountain_B', 'Natural_Wi', 'Organized_', 'Parking', 'Pavilion', 'Pets_Allow', 'Playground',\n                                     'Restrooms', 'Rock_Climb', 'Scenic_Vie', 'Sledding', 'Sports_Fie', 'Swimming', 'Tennis_Cou',\n                                     'Theatre_Am', 'Trails', 'Visitor_Ce', 'White_Wate', 'Wildlife_W', 'Amenity_Co', 'Feedback_l',\n                                     'Skate_Park'])\n\nupdated_parks = parks_data.groupby('PREMISE_CO')['Acres'].sum().reset_index()\nupdated_parks['park_sq_mi'] = updated_parks['Acres'] / 640\nupdated_parks['PREMISE_CO'] = updated_parks['PREMISE_CO'].str.upper()\n\nparks = counties.merge(\n    updated_parks,\n    left_on='County', \n    right_on='PREMISE_CO',  \n    how='left')\n\nparks['Percent Local Park'] = parks['park_sq_mi'] / parks['AREA_SQ_MI'] * 100\n\n\nunemp_data = pd.read_csv(\"/Users/macytrout/Desktop/Python Final/unemp.csv\")\nunemp_data['County'] = unemp_data['County'].str.replace('County', '', case=False).str.strip()\nunemp_data['County'] = unemp_data['County'].str.upper()\n\npa_counties = unemp_data.merge(\n    parks,\n    left_on='County',  # Column in pa_counties to merge on\n    right_on='County',  # Column in updated_parks to merge on\n    how='left')\n\npa_counties.rename(columns={\"Value (Percent)\": \"Unemp Rate\"}, inplace=True)\n\npa_counties.head()\n\n\n\n\n\n\n\n\nCounty\nFIPS\nUnemp Rate\nSOUND\nMSLINK\nMAINT_CTY_\nAREA\nCOUNTY_PER\nCOUNTY_N_1\nNOTE_FILE\n...\nPercent_White\nPercent_Black\nPercent_Hispanic\nPercent_HS_degrees\nPercent_Bachelors\nPercent_Poverty\nPREMISE_CO\nAcres\npark_sq_mi\nPercent Local Park\n\n\n\n\n0\nPHILADELPHIA\n42101.0\n8.6\nNaN\n67.0\n5\n0.0\n0.0\n67.0\nNaN\n...\n37.086181\n40.101920\n15.674225\n18.039201\n18.804105\n32.275883\nPHILADELPHIA\n14743.428866\n23.036608\n16.054318\n\n\n1\nPIKE\n42103.0\n8.5\nNaN\n51.0\n4\n0.0\n0.0\n51.0\nNaN\n...\n82.292020\n6.047868\n11.946573\n21.893010\n15.568566\n13.181716\nPIKE\n1680.749924\n2.626172\n0.462356\n\n\n2\nFAYETTE\n42051.0\n7.2\nNaN\n26.0\n1\n0.0\n0.0\n26.0\nNaN\n...\n90.477118\n4.233863\n1.386109\n30.989666\n12.285337\n21.231176\nFAYETTE\n3348.768523\n5.232451\n0.655030\n\n\n3\nCAMERON\n42023.0\n7.1\nNaN\n12.0\n4\n0.0\n0.0\n12.0\nNaN\n...\n95.039683\n0.044092\n2.006173\n35.361552\n8.688147\n19.390104\nCAMERON\n96.706578\n0.151104\n0.037816\n\n\n4\nCARBON\n42025.0\n6.9\nNaN\n13.0\n2\n0.0\n0.0\n13.0\nNaN\n...\n91.753053\n2.433172\n5.981421\n29.374942\n12.482574\n15.711937\nCARBON\n3632.510434\n5.675798\n1.460450\n\n\n\n\n5 rows × 48 columns\n\n\n\n\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure pa_counties is a GeoDataFrame\nif 'geometry' not in pa_counties.columns:\n    raise ValueError(\"The 'pa_counties' DataFrame must have a 'geometry' column.\")\n\npa_counties = gpd.GeoDataFrame(pa_counties, geometry=pa_counties['geometry'])\n\n# Ensure the GeoDataFrame has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Median Household Income for color scaling\nnorm = Normalize(vmin=pa_counties['Median Household Income'].min(), vmax=pa_counties['Median Household Income'].max())\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Median Household Income',\n    cmap='plasma',  # Darker colormap\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Median Income ($)\"},\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Median Household Income by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Median Household Income for color scaling\nnorm = Normalize(vmin=pa_counties['Median Household Income'].min(), vmax=pa_counties['Median Household Income'].max())\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Median Household Income',\n    cmap='plasma',  # Updated colormap for income\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Median Household Income ($)\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add a dark basemap for better contrast\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\n# Add a title and format the map\nplt.title(\"Median Household Income by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show the map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Percent Poverty for color scaling\nnorm = Normalize(vmin=pa_counties['Percent_Poverty'].min(), vmax=pa_counties['Percent_Poverty'].max())\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Percent_Poverty',\n    cmap='plasma',  # Updated colormap\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Below Poverty Line\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Population Below Poverty Line by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Median Housing Value for color scaling\nnorm = Normalize(vmin=pa_counties['Median Housing Value'].min(), vmax=pa_counties['Median Housing Value'].max() * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Median Housing Value',\n    cmap='plasma',  # Updated colormap for better visibility\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Median Housing Value ($)\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Median Housing Value by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Percent African American for color scaling\nnorm = Normalize(vmin=pa_counties['Percent_Black'].min(), vmax=pa_counties['Percent_Black'].max() * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Percent_Black',\n    cmap='plasma',  # Updated colormap for better visibility\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent African American\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Percent African American by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Percent Bachelors for color scaling\nnorm = Normalize(vmin=pa_counties['Percent_Bachelors'].min(), vmax=pa_counties['Percent_Bachelors'].max() * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Percent_Bachelors',\n    cmap='viridis',  # Updated colormap for better visualization\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Bachelors Degree\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Percent Bachelors Degrees by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize Percent Local Park for color scaling\nnorm = Normalize(vmin=pa_counties['Percent Local Park'].min(), vmax=pa_counties['Percent Local Park'].max() * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Percent Local Park',\n    cmap='viridis',  # Colormap for better visualization\n    edgecolor='black',\n    linewidth=0.5,\n    legend=True,\n    norm=norm,\n    legend_kwds={'shrink': 0.6, 'label': \"Percent Local Park\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='white', markersize=50, edgecolor='black', label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add dark-themed basemap\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='white', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\n# Add title and finalize the layout\nplt.title(\"Percent Local Park by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nimport geopandas as gpd\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize unemployment data for color mapping\nmin_unemp = pa_counties['Unemp Rate'].min()\nmax_unemp = pa_counties['Unemp Rate'].max()\nnorm = Normalize(vmin=min_unemp, vmax=max_unemp * 1.2)\n\n# Plot the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\npa_counties.plot(\n    column='Unemp Rate',\n    cmap='viridis',\n    edgecolor='black',\n    linewidth=0.5,\n    legend=False,\n    norm=norm,\n    ax=ax\n)\n\n# Add a colorbar manually\nsm = plt.cm.ScalarMappable(cmap='viridis', norm=norm)\nsm.set_array([])\ncbar = fig.colorbar(sm, ax=ax)\ncbar.set_label(\"Unemployment Rate (%)\", fontsize=10, labelpad=10)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='red', markersize=50, label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add basemap\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for Key Cities\nlegend_elements = [Line2D([0], [0], marker='o', color='red', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\nplt.title(\"Unemployment Rate by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\n\n# Show map\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Refined list of variables for correlation analysis, including park-related variable\nrefined_vars = [\n    'Median Household Income',\n    'Per Capita Income',\n    'Median Housing Value',\n    'Population Below Poverty Line',\n    'Percent_Bachelors',\n    'Percent_Poverty',\n    'Unemp Rate',\n    'Percent Local Park'\n]\n\n# Create a correlation matrix for the refined variables\nrefined_correlation_matrix = pa_counties[refined_vars].corr()\n\n# Plot the heatmap\nplt.figure(figsize=(12, 10))\nsns.heatmap(\n    refined_correlation_matrix, \n    annot=True, \n    cmap='coolwarm', \n    fmt='.2f', \n    linewidths=0.5, \n    cbar_kws={\"shrink\": 0.8, \"label\": \"Correlation Coefficient\"}\n)\nplt.title(\"Correlation Matrix of Key Economic, Demographic, and Park Variables\", fontsize=16, fontweight='bold')\nplt.xticks(rotation=45, ha='right', fontsize=10)\nplt.yticks(fontsize=10)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nThis correlation matrix provides a valuable foundation for identifying areas in Pennsylvania where government resources and policies can be more effectively allocated.\nKey Insights from the Correlation Matrix:\nStrong Positive Relationships Between Income and Education:\n\nMedian Household Income and Percent Bachelors show a strong positive correlation (0.90). This suggests that areas with higher levels of educational attainment tend to have higher household incomes. Policies that promote access to higher education, such as scholarships or workforce training programs, could uplift communities with lower incomes.\nPer Capita Income also correlates positively with Percent Bachelors (0.89), reinforcing this connection.\n\nInverse Relationship Between Poverty and Income:\n\nPercent Poverty has a negative correlation with Median Household Income (-0.44) and Per Capita Income (-0.54). Areas with higher poverty rates are likely to have lower incomes. These areas may need targeted economic development programs, job creation initiatives, or social safety nets to reduce poverty levels.\n\nUnemployment and Poverty:\n\nUnemployment Rate correlates positively with Percent Poverty (0.45) and negatively with income measures (e.g., -0.24 with Median Household Income). High unemployment exacerbates poverty and income disparities. Job training programs and economic revitalization efforts could be prioritized in high-unemployment areas.\n\nPark Accessibility and Socioeconomic Indicators:\n\nPercent Local Park has a modest positive correlation with Median Household Income (0.26) and Per Capita Income (0.43). This suggests that areas with better park access might also have higher incomes, potentially due to historical investment patterns. Expanding park and recreational opportunities in underserved areas could address inequities and improve quality of life.\n\nFocus on Areas of High Poverty and Low Education:\n\nPercent Poverty and Population Below Poverty Line are positively correlated (0.42), highlighting a clear need to target these areas. Additionally, Percent Bachelors has a weaker correlation with poverty measures, indicating that educational access might be a key intervention point.\n\nHousing Value as a Proxy for Wealth:\n\nMedian Housing Value correlates strongly with Median Household Income (0.93) and Percent Bachelors (0.80). Housing value could serve as a proxy for identifying wealthier versus underserved areas. Policies could focus on improving housing affordability in high-poverty regions.\n\nActionable Insights for Policy Implementation:\nTarget High-Poverty, Low-Education Areas:\n\nUse this correlation matrix to identify counties with high poverty rates and low levels of educational attainment. Allocate resources to provide educational programs and improve access to higher education in these regions.\n\nExpand Parks and Recreational Resources:\n\nThe modest correlation between park access and income highlights the potential for parks to serve as equitable community investments. Focus on areas with limited park access to enhance quality of life and public health.\n\nJob Training and Economic Development:\n\nAddress high unemployment areas by investing in job training and economic opportunities. This can help reduce poverty rates and improve overall economic conditions.\n\nConsider Housing Affordability:\n\nExplore housing initiatives in areas where Median Housing Value is low but Percent Poverty is high. This might indicate regions where housing needs renovation or redevelopment.\n\n\nfig, ax = plt.subplots(figsize=(10, 6))\n\nscatter = sns.scatterplot(\n    data=pa_counties, \n    x='Percent_Bachelors', \n    y='Median Household Income', \n    size='Total Population', \n    hue='Unemp Rate',  # Change hue to Unemployment Rate\n    palette='coolwarm', \n    sizes=(20, 200),  \n    edgecolor='black',\n    linewidth=0.5,\n    alpha=0.8, \n    ax=ax\n)\n\nnorm = plt.Normalize(pa_counties['Unemp Rate'].min(), pa_counties['Unemp Rate'].max())\nsm = plt.cm.ScalarMappable(cmap=\"coolwarm\", norm=norm)\nsm.set_array([])\ncbar = plt.colorbar(sm, ax=ax, aspect=50, shrink=0.75, pad=0.02)\ncbar.set_label(\"Unemployment Rate (%)\")\n\nplt.title(\"Median Income vs. Bachelor's Degree Percent\\nSize Reflects Population, Color Reflects Unemployment Rate\")\nplt.xlabel(\"Percentage of Adults with Bachelor's Degree\")\nplt.ylabel(\"Median Household Income\")\n\nsns.despine()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nThis scatterplot provides insights into the relationships between median household income, percentage of adults with a bachelor’s degree, unemployment rate, and total population at the county level in Pennsylvania. Here’s what this visualization reveals for the analysis:\nMedian Income vs. Bachelor’s Degree Attainment:\n\nCounties with higher percentages of adults holding a bachelor’s degree generally show higher median household incomes. This suggests a strong positive relationship between educational attainment and income levels across Pennsylvania counties.\nSome outliers exist where counties with relatively high education levels still have lower median incomes, indicating other influencing factors like industry structure or cost of living.\n\nUnemployment Rate (Color Gradient):\n\nThe color gradient, ranging from blue (lower unemployment) to red (higher unemployment), highlights that counties with higher bachelor’s degree attainment tend to have lower unemployment rates.\nCounties with higher unemployment rates (darker red points) are concentrated in areas with lower income and bachelor’s degree percentages, emphasizing a need for policy interventions in these regions.\n\nPopulation Distribution (Bubble Size):\n\nThe bubble size represents the total population of each county. Larger counties (e.g., Philadelphia) are concentrated in regions with relatively higher income and education levels but may also face unique challenges.\nSmaller counties are scattered across the spectrum, with varying levels of income, education, and unemployment, indicating that population size alone does not dictate economic outcomes.\n\nImplications for Policy:\n\nEducation and Income: There is a clear need to invest in education as a means to improve median household income. Counties with lower bachelor’s degree attainment could benefit from initiatives to expand access to higher education and workforce development programs.\nUnemployment Interventions: Counties with high unemployment rates and lower educational attainment should be prioritized for job creation programs and retraining initiatives.\nResource Allocation: Larger counties with significant population sizes should not overshadow smaller counties in resource allocation, as many smaller counties face substantial challenges in income, education, and employment.\nOutliers: Policymakers should also focus on outliers where high educational attainment does not translate into higher income or employment, identifying and addressing structural barriers in these regions.\n\nOverall, this visualization reinforces the interconnectedness of income, education, and employment and provides a data-driven foundation for equitable resource allocation across Pennsylvania.\n\nimport pandas as pd\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nfrom sklearn.preprocessing import MinMaxScaler\nfrom matplotlib.colors import Normalize\nfrom matplotlib.lines import Line2D\n\n# Ensure all variables are numeric and handle NaN values\npa_counties['Median Household Income'] = pd.to_numeric(pa_counties['Median Household Income'], errors='coerce')\npa_counties['Percent_Bachelors'] = pd.to_numeric(pa_counties['Percent_Bachelors'], errors='coerce')\npa_counties['Percent_Poverty'] = pd.to_numeric(pa_counties['Percent_Poverty'], errors='coerce')\n\n# Fill NaN values\npa_counties['Median Household Income'].fillna(0, inplace=True)\npa_counties['Percent_Bachelors'].fillna(0, inplace=True)\npa_counties['Percent_Poverty'].fillna(0, inplace=True)\n\n# Normalize variables\nscaler = MinMaxScaler()\nvariables = pa_counties[['Median Household Income', 'Percent_Bachelors', 'Percent_Poverty']].copy()\nvariables = pd.DataFrame(scaler.fit_transform(variables), columns=variables.columns)\n\n# Calculate Socioeconomic Index\npa_counties['Socioeconomic_Index'] = (\n    variables['Median Household Income'] +\n    variables['Percent_Bachelors'] -\n    variables['Percent_Poverty']\n)\n\n# Ensure the geometry column in pa_counties has a CRS\nif pa_counties.crs is None:\n    pa_counties = pa_counties.set_crs(epsg=4326)\n\n# Reproject pa_counties to Pennsylvania State Plane (EPSG: 2272)\npa_counties = pa_counties.to_crs(epsg=2272)\n\n# Key cities with corrected coordinates\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Normalize the Socioeconomic Index for better visualization\nnorm = Normalize(vmin=pa_counties['Socioeconomic_Index'].min(), vmax=pa_counties['Socioeconomic_Index'].max())\n\n# Create the map\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\n\n# Plot counties with Socioeconomic Index\npa_counties.plot(\n    column='Socioeconomic_Index',\n    cmap='coolwarm',\n    edgecolor='black',\n    linewidth=0.5,\n    norm=norm,\n    legend=True,\n    legend_kwds={'shrink': 0.6, 'label': \"Socioeconomic Index\"},\n    ax=ax\n)\n\n# Plot key cities\ncities_gdf.plot(ax=ax, color='red', markersize=50, label=\"Key Cities\")\n\n# Add city labels\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add basemap for context\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Add custom legend for key cities\nlegend_elements = [Line2D([0], [0], marker='o', color='red', markersize=8, linestyle='', label='Key Cities')]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\n# Add title and clean up\nplt.title(\"Socioeconomic Index by County in Pennsylvania\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\nThis map visualizes the Socioeconomic Index across counties in Pennsylvania, with key cities (Philadelphia, Harrisburg, Pittsburgh) highlighted for context. The Socioeconomic Index is a composite score combining three key variables: Median Household Income, Percent of Adults with a Bachelor’s Degree, and Percent of Population Below the Poverty Line.\nWhat the Map Tells Us\nSpatial Distribution of Socioeconomic Conditions:\n\nHigher Index Scores (e.g., Philadelphia and some surrounding counties):\nThese areas have relatively high household incomes and education levels but lower poverty rates.\nThese counties are likely economic hubs or affluent suburban areas.\nLower Index Scores (e.g., rural central and western counties):\nThese areas exhibit lower household incomes, lower rates of bachelor’s degree attainment, and higher poverty rates.\nThese counties might face systemic socioeconomic challenges and are potential candidates for focused policy intervention.\n\nUrban vs. Rural Divide:\n\nUrban areas like Philadelphia show higher socioeconomic scores due to a concentration of wealth, education, and infrastructure.\nMany rural areas show lower scores, indicating a disparity in resources and opportunities.\n\nRegional Trends:\n\nCounties around Pittsburgh and Harrisburg have moderate scores, reflecting their positions as regional hubs with mixed socioeconomic conditions.\nAreas in the central and northern parts of the state (Appalachian and rural areas) tend to score lower, reinforcing the need for targeted assistance.\n\nIdentifying Priority Areas for Policy Intervention:\n\nUse the lowest-scoring counties as target regions for government programs, such as:\nJob training and economic development initiatives.\nSubsidies or incentives for businesses to invest in these areas.\nEducational programs to increase bachelor’s degree attainment.\n\nResource Allocation:\n\nHighlight high-scoring areas to emphasize where resources are already sufficient.\nFocus on low-scoring counties for resource reallocation (e.g., infrastructure, parks, healthcare).\n\nComparison with Other Indicators:\n\nOverlay the Socioeconomic Index with other variables like unemployment rates or park access to identify counties with compounding disadvantages.\nFor instance, counties with low socioeconomic scores and high unemployment should be prioritized for job creation policies.\n\nPolicy Recommendations:\n\nIncorporate the map into presentations or reports to visually justify targeting low-scoring areas.\nRecommend policies tailored to the specific needs of the region (e.g., education-focused policies for areas with low bachelor’s degree attainment, poverty alleviation programs).\n\nStakeholder Engagement:\n\nUse the map to communicate to policymakers and stakeholders where disparities exist.\nHighlight the importance of addressing rural-urban disparities to ensure equitable development across Pennsylvania.\n\n\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler\nimport matplotlib.pyplot as plt\nimport contextily as ctx\nfrom matplotlib.patches import Patch\n\n# Variables for clustering\nclustering_vars = [\n    'Socioeconomic_Index', \n    'Median Household Income', \n    'Percent_Bachelors', \n    'Percent_Poverty', \n    'Percent Local Park',\n    'Unemp Rate'  # Added Unemployment Rate\n]\n\n# Ensure numeric and handle missing values\npa_counties[clustering_vars] = pa_counties[clustering_vars].apply(pd.to_numeric, errors='coerce')\n\n# Fill NaNs with the median of each column\nfor var in clustering_vars:\n    pa_counties[var].fillna(pa_counties[var].median(), inplace=True)\n\n# Normalize variables\nscaler = StandardScaler()\npa_counties[clustering_vars] = scaler.fit_transform(pa_counties[clustering_vars])\n\n# Remove rows with missing geometry\npa_counties = pa_counties[pa_counties['geometry'].notnull()]\n\n# Perform K-means clustering\nkmeans = KMeans(n_clusters=4, random_state=42)\npa_counties['Cluster'] = kmeans.fit_predict(pa_counties[clustering_vars])\n\n# Reassign cluster labels for clarity\npa_counties['Cluster'] = pa_counties['Cluster'] + 1  # Change to 1-4 for better labeling\n\n# Define corrected coordinates for key cities\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\n# Convert city coordinates to geospatial points\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\n# Define darker colors for clusters\npastel_colors = {\n    1: \"#1f77b4\",  # Dark Blue (Good Cluster)\n    2: \"#2ca02c\",  # Dark Green (Good Cluster)\n    3: \"#d62728\",  # Dark Red (Bad Cluster)\n    4: \"#9467bd\"   # Dark Purple (Bad Cluster)\n}\n\npa_counties['color'] = pa_counties['Cluster'].map(pastel_colors)\n\n# Plot map with clustering\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    color=pa_counties['color'],\n    edgecolor='black',\n    linewidth=0.5,\n    ax=ax\n)\n\n# Add key cities\ncities_gdf.plot(ax=ax, color='white', edgecolor='black', markersize=50, label=\"Key Cities\")\n\n# Annotate city names\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\n# Add basemap for context\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\n# Create a custom legend for clusters\nlegend_elements = [\n    Patch(facecolor=pastel_colors[1], edgecolor='black', label='Cluster 1'),\n    Patch(facecolor=pastel_colors[2], edgecolor='black', label='Cluster 2'),\n    Patch(facecolor=pastel_colors[3], edgecolor='black', label='Cluster 3'),\n    Patch(facecolor=pastel_colors[4], edgecolor='black', label='Cluster 4'),\n    Patch(facecolor='white', edgecolor='black', label='Key Cities')\n]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10)\n\n# Add title and clean up axes\nplt.title(\"County Clusters Based on Socioeconomic, Demographic, Park, and Unemployment Variables\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\n# Print summary of clusters\ncluster_summary = pa_counties.groupby('Cluster')[clustering_vars].mean()\nprint(\"Cluster Summary:\")\nprint(cluster_summary)\n\n/Users/macytrout/miniforge3/envs/musa-550-fall-2023/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:1412: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  super()._check_params_vs_input(X, default_n_init=10)\n\n\n\n\n\n\n\n\n\nCluster Summary:\n         Socioeconomic_Index  Median Household Income  Percent_Bachelors  \\\nCluster                                                                    \n1                  -0.531187                -0.534398          -0.490793   \n2                   3.148042                 3.381667           2.761867   \n3                  -1.533165                -0.724491           0.652393   \n4                   0.746505                 0.677930           0.608305   \n\n         Percent_Poverty  Percent Local Park  Unemp Rate  \nCluster                                                   \n1               0.315406           -0.385381    0.195631  \n2              -1.855439            1.058408   -0.560242  \n3               4.137164            6.117241    2.876745  \n4              -0.606666            0.363946   -0.480407  \n\n\nTalking Points for Policymakers: Suggestions Based on Cluster Analysis\nThis analysis categorizes Pennsylvania counties into four distinct clusters based on their socioeconomic index, median household income, educational attainment, poverty rates, unemployment, and local park coverage. These clusters help us identify areas where government resources could be strategically allocated to address disparities.\nCluster Insights and Policy Recommendations\nCluster 1: Prosperous Counties\nCharacteristics:\n\nHigh socioeconomic index.\nAbove-average household income and educational attainment.\nLow poverty and unemployment rates.\nStrong local park coverage.\n\nPolicy Recommendations:\n\nThese counties are thriving. Policies should focus on maintaining existing resources and infrastructure.\nExpand innovative programs such as workforce training for high-skill industries and renewable energy investments to keep these areas competitive.\n\nCluster 2: Stable but Vulnerable Counties\nCharacteristics:\n\nModerate socioeconomic indicators.\nMedian household income and education slightly below Cluster 0.\nPoverty and unemployment are modest but rising in some areas.\nBelow-average local park coverage.\n\nPolicy Recommendations:\n\nInvest in green infrastructure and park creation to improve quality of life and attract economic growth.\nSupport small business incentives and workforce training programs to bolster economic resilience.\nTarget housing affordability programs to address growing economic pressures.\n\nCluster 3: Economically Struggling Rural Counties\nCharacteristics:\n\nLow socioeconomic index, median household income, and educational attainment.\nPoverty is present but less concentrated (likely in rural areas).\nLimited local park coverage, suggesting a lack of recreational opportunities.\n\nPolicy Recommendations:\n\nPrioritize economic development programs, including small business grants and rural broadband expansion.\nExpand access to higher education and job training programs to increase educational attainment.\nImprove park and green space accessibility to enhance community well-being and attract residents and visitors.\n\nCluster 4: Counties in Crisis\nCharacteristics:\n\nLowest socioeconomic index, coupled with the highest poverty and unemployment rates.\nSurprisingly high local park coverage, but these areas may lack the capacity to maintain parks effectively.\n\nPolicy Recommendations:\n\nImplement immediate poverty alleviation programs, including job creation initiatives and affordable housing.\nProvide direct state funding to maintain parks and utilize them for community-building activities.\nFocus on long-term educational and workforce development to address systemic poverty and unemployment.\n\nBroader Policy Implications\nTargeted Resource Allocation:\n\nClusters 2 and 3 should be prioritized for state and federal resources to address entrenched economic disparities.\nParks in Cluster 3, while abundant, should be maintained through state support to ensure accessibility and functionality.\n\nRegional Collaboration:\n\nUse thriving counties in Cluster 0 as models for economic development and park infrastructure improvements in struggling areas.\nEquity in Policy Implementation:\nEnsure that policies account for the unique challenges of rural areas (Cluster 2) versus more urbanized high-poverty areas (Cluster 3).\n\nThis cluster analysis highlights the need for nuanced, data-driven policies tailored to the strengths and challenges of each cluster. By targeting investments where they are most needed, the state can foster more equitable development and improve outcomes for residents statewide.\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Group by cluster and calculate the mean for relevant variables\ncluster_summary = pa_counties.groupby('Cluster')[[\n    'Median Household Income', \n    'Population Below Poverty Line', \n    'Percent_Bachelors', \n    'Percent Local Park',\n    'Unemp Rate',\n    'Total Population'\n]].mean()\n\n# Rename columns for clarity\ncluster_summary = cluster_summary.rename(columns={\n    'Median Household Income': 'Median Household Income ($)',\n    'Population Below Poverty Line': 'Population Below Poverty Line (%)',\n    'Percent_Bachelors': \"Bachelor's Degree Holders (%)\",\n    'Percent Local Park': 'Local Park Coverage (%)',\n    'Unemp Rate': 'Unemployment Rate (%)',\n    'Total Population': 'Total Population'\n})\n\nprint(\"Within-Cluster Characteristics Summary:\")\nprint(cluster_summary)\n\n# Set dark theme for the plots\nsns.set_theme(style=\"darkgrid\", rc={\"axes.facecolor\": \"#222222\", \"figure.facecolor\": \"#222222\"})\n\nsns.set_palette(\"bright\")\ncolors = sns.color_palette(\"bright\", n_colors=len(cluster_summary))\n\n# Create bar plots for each variable\nfig, axes = plt.subplots(2, 3, figsize=(15, 8))\nfig.suptitle(\"Cluster Characteristics by Demographic, Economic, and Environmental Indicators\", fontsize=16, fontweight='bold', color='white')\n\nvariables = cluster_summary.columns\nfor ax, var in zip(axes.flatten(), variables):\n    bars = cluster_summary[var].plot(kind='bar', ax=ax, color=colors, width=0.8)\n    ax.set_title(var, fontsize=12, fontweight='bold', color='white')\n    ax.set_xlabel(\"Cluster\", fontsize=10, color='white')\n    ax.set_ylabel(\"Average Value\", fontsize=10, color='white')\n    ax.tick_params(axis='x', rotation=0, colors='white')\n    ax.tick_params(axis='y', colors='white')\n    ax.grid(axis='y', linestyle='--', alpha=0.5, color='gray')  # Add gridlines\n\n    # Add value labels on top of bars\n    for bar in bars.patches:\n        ax.text(\n            bar.get_x() + bar.get_width() / 2, \n            bar.get_height() + 0.02 * max(cluster_summary[var]), \n            f\"{bar.get_height():.2f}\", \n            ha='center', fontsize=8, color='white'\n        )\n\n# Hide any unused subplots\nfor ax in axes.flatten()[len(variables):]:\n    ax.axis(\"off\")\n    ax.set_facecolor('#222222')\n\n# Adjust layout for better spacing\nplt.tight_layout(rect=[0, 0, 1, 0.92])\nplt.show()\n\nWithin-Cluster Characteristics Summary:\n         Median Household Income ($)  Population Below Poverty Line (%)  \\\nCluster                                                                   \n1                          -0.534398                        9700.976744   \n2                           3.381667                       39788.333333   \n3                          -0.724491                      351811.000000   \n4                           0.677930                       29706.050000   \n\n         Bachelor's Degree Holders (%)  Local Park Coverage (%)  \\\nCluster                                                           \n1                            -0.490793                -0.385381   \n2                             2.761867                 1.058408   \n3                             0.652393                 6.117241   \n4                             0.608305                 0.363946   \n\n         Unemployment Rate (%)  Total Population  \nCluster                                           \n1                     0.195631      7.582807e+04  \n2                    -0.560242      6.793453e+05  \n3                     2.876745      1.593208e+06  \n4                    -0.480407      3.048678e+05  \n\n\n\n\n\n\n\n\n\nBased on the clustering analysis and visualizations of demographic, economic, and environmental characteristics across Pennsylvania counties, here are the key insights and policy recommendations:\nCluster 1 (Blue)\n\nCharacteristics: This cluster shows high median household income and bachelor’s degree attainment, relatively low poverty rates, and moderate park coverage. Unemployment rates are below average, and the total population is mid-sized.\nPolicy Recommendation: Counties in this cluster appear economically stable with access to educational attainment and moderate green spaces. Policies could focus on maintaining economic resilience and enhancing recreational spaces to sustain quality of life.\n\nCluster 2 (Orange)\n\nCharacteristics: This cluster has average household income and unemployment rates, relatively lower bachelor’s degree attainment, and minimal park coverage. Poverty rates are slightly above the mean.\nPolicy Recommendation: These areas would benefit from educational initiatives to increase higher education attainment and investments in green infrastructure, such as parks, to improve community well-being and attract residents.\n\nCluster 3 (Green)\n\nCharacteristics: This cluster faces significant economic challenges, with the lowest median income, high poverty levels, and extremely low educational attainment. Park coverage is minimal, and unemployment rates are average.\n\nPolicy Recommendation: These counties should be prioritized for resource allocation. Policies should include:\n\nEconomic development programs, such as job creation initiatives and small business support.\nExpansion of higher education opportunities and workforce training programs.\nInvestment in parks and green spaces to provide recreational opportunities and improve quality of life.\n\nCluster 4 (Red)\nCharacteristics: This cluster is defined by a large population and extreme disparities. It has the highest unemployment rate and a very high poverty rate, but also notable park coverage and higher bachelor’s degree attainment.\nPolicy Recommendation: Policies should aim to reduce poverty and unemployment, focusing on:\n\nWorkforce development and job creation initiatives.\nSupport for affordable housing and anti-poverty programs.\nLeveraging existing park resources to promote tourism and community activities.\n\nSummary and Policy Focus\nThe clusters highlight areas of Pennsylvania that vary widely in socioeconomic and environmental characteristics:\n\nClusters 2 and 3 are clear areas of need, with high poverty and unemployment rates, calling for targeted interventions.\nClusters 0 and 1, while more stable, would benefit from strategic investments in green infrastructure and educational initiatives to maintain and enhance their resilience.\n\nThis analysis helps policymakers identify and address disparities across counties, ensuring equitable distribution of resources and tailored policy actions to foster economic and social stability statewide."
  },
  {
    "objectID": "analysis/kmeans.html",
    "href": "analysis/kmeans.html",
    "title": "K-Means Clustering Analysis",
    "section": "",
    "text": "This analysis will categorize Pennsylvania counties into distinct clusters based on their socioeconomic index, median household income, educational attainment, poverty rates, unemployment, and local park coverage. These clusters will help to identify areas in Pennsylvania where government resources could be strategically allocated to address disparities.\n\n\nIntel MKL WARNING: Support of Intel(R) Streaming SIMD Extensions 4.2 (Intel(R) SSE4.2) enabled only processors has been deprecated. Intel oneAPI Math Kernel Library 2025.0 will require Intel(R) Advanced Vector Extensions (Intel(R) AVX) instructions.\nIntel MKL WARNING: Support of Intel(R) Streaming SIMD Extensions 4.2 (Intel(R) SSE4.2) enabled only processors has been deprecated. Intel oneAPI Math Kernel Library 2025.0 will require Intel(R) Advanced Vector Extensions (Intel(R) AVX) instructions.\n\n\n\n\nCode\nclustering_vars = [\n    'Socioeconomic_Index', \n    'Median Household Income', \n    'Percent_Bachelors', \n    'Percent_Poverty', \n    'Percent Local Park',\n    'Unemp Rate'  \n]\n\npa_counties[clustering_vars] = pa_counties[clustering_vars].apply(pd.to_numeric, errors='coerce')\nfor var in clustering_vars:\n    pa_counties[var].fillna(pa_counties[var].median(), inplace=True)\n\nscaler = StandardScaler()\npa_counties[clustering_vars] = scaler.fit_transform(pa_counties[clustering_vars])\n\npa_counties = pa_counties[pa_counties['geometry'].notnull()]\n\nkmeans = KMeans(n_clusters=4, random_state=42)\npa_counties['Cluster'] = kmeans.fit_predict(pa_counties[clustering_vars])\npa_counties['Cluster'] = pa_counties['Cluster'] + 1  \n\nkey_cities = [\n    {\"name\": \"Philadelphia\", \"x\": -75.1652, \"y\": 39.9526},\n    {\"name\": \"Harrisburg\", \"x\": -76.8867, \"y\": 40.2732},\n    {\"name\": \"Pittsburgh\", \"x\": -79.9959, \"y\": 40.4406}\n]\n\ncities_gdf = gpd.GeoDataFrame(\n    key_cities,\n    geometry=gpd.points_from_xy([city['x'] for city in key_cities], [city['y'] for city in key_cities]),\n    crs=\"EPSG:4326\"\n).to_crs(epsg=2272)\n\npastel_colors = {\n    1: \"#1f77b4\",  \n    2: \"#2ca02c\",  \n    3: \"#d62728\",  \n    4: \"#9467bd\"  \n}\npa_counties['color'] = pa_counties['Cluster'].map(pastel_colors)\nfig, ax = plt.subplots(1, 1, figsize=(12, 8))\npa_counties.plot(\n    color=pa_counties['color'],\n    edgecolor='black',\n    linewidth=0.5,\n    ax=ax\n)\n\ncities_gdf.plot(ax=ax, color='white', edgecolor='black', markersize=50, label=\"Key Cities\")\nfor city, geom in zip(key_cities, cities_gdf.geometry):\n    ax.text(geom.x + 5000, geom.y, city[\"name\"], fontsize=10, color='white', fontweight='bold', ha=\"left\")\n\nctx.add_basemap(ax, crs=pa_counties.crs, source=ctx.providers.CartoDB.DarkMatter)\n\nlegend_elements = [\n    Patch(facecolor=pastel_colors[1], edgecolor='black', label='Cluster 1'),\n    Patch(facecolor=pastel_colors[2], edgecolor='black', label='Cluster 2'),\n    Patch(facecolor=pastel_colors[3], edgecolor='black', label='Cluster 3'),\n    Patch(facecolor=pastel_colors[4], edgecolor='black', label='Cluster 4'),\n    Patch(facecolor='white', edgecolor='black', label='Key Cities')\n]\nax.legend(handles=legend_elements, loc='upper left', fontsize=10, labelcolor='white')\n\n\nplt.title(\"County Clusters Based on Socioeconomic, Demographic, Park, and Unemployment Variables\\nKey Cities Highlighted\", \n          fontsize=14, fontweight='bold', color='white')\nax.axis(\"off\")\nplt.tight_layout()\nplt.show()\n\ncluster_summary = pa_counties.groupby('Cluster')[clustering_vars].mean()\nprint(\"Cluster Summary:\")\nprint(cluster_summary)\n\n\n/Users/ryanswett/miniforge3/envs/musa-550-fall-2023/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:1412: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n  super()._check_params_vs_input(X, default_n_init=10)\n\n\n\n\n\n\n\n\n\nCluster Summary:\n         Socioeconomic_Index  Median Household Income  Percent_Bachelors  \\\nCluster                                                                    \n1                  -0.531187                -0.534398          -0.490793   \n2                   3.148042                 3.381667           2.761867   \n3                  -1.533165                -0.724491           0.652393   \n4                   0.746505                 0.677930           0.608305   \n\n         Percent_Poverty  Percent Local Park  Unemp Rate  \nCluster                                                   \n1               0.315406           -0.385381    0.195631  \n2              -1.855439            1.058408   -0.560242  \n3               4.137164            6.117241    2.876745  \n4              -0.606666            0.363946   -0.480407  \n\n\nTalking Points for Policymakers: Suggestions Based on Cluster Analysis\nThis analysis categorizes Pennsylvania counties into four distinct clusters based on their socioeconomic index, median household income, educational attainment, poverty rates, unemployment, and local park coverage. These clusters help us identify areas where government resources could be strategically allocated to address disparities.\nCluster 1: Rural, Low Socioeconomic Status Counties (Blue)\nCharacteristics:\n\nSocioeconomic Status: Low (below average), with significantly lower household income and lower levels of educational attainment.\nPoverty: Slightly above average poverty levels.\nUnemployment: Slightly higher than the average unemployment rate.\nAccess to Parks: Below average.\n\nPolicy Recommendations:\n\nJob Creation & Workforce Development: Invest in job creation programs and provide more job training to improve workforce skills.\nPoverty Reduction & Education: Increase social safety nets (e.g., housing, food assistance) and expand access to education and vocational training to improve long-term economic opportunities.\n\nCluster 2: Economically Thriving Counties (Green)\nCharacteristics:\n\nSocioeconomic Status: High, with significantly higher household incomes and higher educational attainment.\nPoverty: Very low poverty levels.\nUnemployment: Very low unemployment rates.\nAccess to Parks: Above average.\n\nPolicy Recommendations:\n\nAside from working to maintain economic stability, this cluster does not need much policy intervention.\n\nCluster 3: Developing Urban Counties (Red)\nCharacteristics:\n\nSocioeconomic Status: Low, with low household incomes and limited educational attainment.\nPoverty: Very high, much higher than average.\nUnemployment: Very high, indicating economic distress.\nAccess to Parks: High, which might suggest a focus on recreation despite economic challenges.\n\nPolicy Recommendations:\n\nEconomic Revitalization: Implement job creation and infrastructure development programs to boost economic activity and reduce unemployment.\nSocial Support & Education: Provide social services to alleviate poverty (e.g., housing, healthcare) and improve access to education and vocational training to enhance future job prospects.\n\nCluster 4: Moderate Socioeconomically with Low Unemployment Counties (Purple)\nCharacteristics:\n\nSocioeconomic Status: Moderate, with slightly above average household income and moderate educational attainment.\nPoverty: Low, slightly below the average.\nUnemployment: Low, indicating a stable labor market.\nAccess to Parks: Slightly above average.\n\nPolicy Recommendations:\n\nPromote Economic Diversification: Encourage the development of new industries and small businesses, particularly in tech, clean energy, and advanced manufacturing, to ensure long-term economic growth.\nStrengthen Community Infrastructure: Improve public services, such as education, healthcare, and transportation, to enhance the overall quality of life and support continued stability.\n\nBroader Policy Implications\nTargeted Resource Allocation:\n\nClusters 1 and 4 should be prioritized for state and federal resources to address entrenched economic disparities.\nParks in Cluster 3, while abundant, should be maintained through state support to ensure accessibility and functionality.\n\nRegional Collaboration:\n\nUse thriving counties in Cluster 3 as a model for economic development and park infrastructure improvements in struggling areas.\nEquity in Policy Implementation:\nEnsure that policies account for the unique challenges of rural areas (Cluster 1) versus more urbanized high-poverty areas (Cluster 2).\n\nThis cluster analysis highlights the need for data-driven policy decision-naking tailored to the strengths and challenges of each cluster. By targeting investments where they are most needed, the state can foster more equitable development and improve outcomes for residents statewide.\n\n\nCode\ncluster_summary = pa_counties.groupby('Cluster')[[\n    'Median Household Income', \n    'Population Below Poverty Line', \n    'Percent_Bachelors', \n    'Percent Local Park',\n    'Unemp Rate',\n    'Total Population'\n]].mean()\n\ncluster_summary = cluster_summary.rename(columns={\n    'Median Household Income': 'Median Household Income ($)',\n    'Population Below Poverty Line': 'Population Below Poverty Line (%)',\n    'Percent_Bachelors': \"Bachelor's Degree Holders (%)\",\n    'Percent Local Park': 'Local Park Coverage (%)',\n    'Unemp Rate': 'Unemployment Rate (%)',\n    'Total Population': 'Total Population'\n})\n\nprint(\"Within-Cluster Characteristics Summary:\")\nprint(cluster_summary)\n\nsns.set_theme(style=\"darkgrid\", rc={\"axes.facecolor\": \"#222222\", \"figure.facecolor\": \"#222222\"})\n\ncluster_colors = {\n    1: \"#1f77b4\",  \n    2: \"#2ca02c\",  \n    3: \"#d62728\",  \n    4: \"#9467bd\"   \n}\ncolors = [cluster_colors[i] for i in range(1, 5)]\n\nfig, axes = plt.subplots(2, 3, figsize=(15, 8))\nfig.suptitle(\"Cluster Characteristics by Demographic, Economic, and Environmental Indicators\", fontsize=16, fontweight='bold', color='white')\n\nvariables = cluster_summary.columns\nfor ax, var in zip(axes.flatten(), variables):\n    bars = cluster_summary[var].plot(kind='bar', ax=ax, color=colors, width=0.8)\n    ax.set_title(var, fontsize=12, fontweight='bold', color='white')\n    ax.set_xlabel(\"Cluster\", fontsize=10, color='white')\n    ax.set_ylabel(\"Average Value (z-score)\", fontsize=10, color='white')\n    ax.tick_params(axis='x', rotation=0, colors='white')\n    ax.tick_params(axis='y', colors='white')\n    ax.grid(axis='y', linestyle='--', alpha=0.5, color='gray')  \n    \n    for bar in bars.patches:\n        ax.text(\n            bar.get_x() + bar.get_width() / 2, \n            bar.get_height() + 0.02 * max(cluster_summary[var]), \n            f\"{bar.get_height():.2f}\", \n            ha='center', fontsize=8, color='white'\n        )\n\nfor ax in axes.flatten()[len(variables):]:\n    ax.axis(\"off\")\n    ax.set_facecolor('#222222')\n    \nplt.tight_layout(rect=[0, 0, 1, 0.92])\nplt.show()\n\n\nWithin-Cluster Characteristics Summary:\n         Median Household Income ($)  Population Below Poverty Line (%)  \\\nCluster                                                                   \n1                          -0.534398                        9700.976744   \n2                           3.381667                       39788.333333   \n3                          -0.724491                      351811.000000   \n4                           0.677930                       29706.050000   \n\n         Bachelor's Degree Holders (%)  Local Park Coverage (%)  \\\nCluster                                                           \n1                            -0.490793                -0.385381   \n2                             2.761867                 1.058408   \n3                             0.652393                 6.117241   \n4                             0.608305                 0.363946   \n\n         Unemployment Rate (%)  Total Population  \nCluster                                           \n1                     0.195631      7.582807e+04  \n2                    -0.560242      6.793453e+05  \n3                     2.876745      1.593208e+06  \n4                    -0.480407      3.048678e+05  \n\n\n\n\n\n\n\n\n\nBased on the clustering analysis and visualizations of demographic, economic, and environmental characteristics across Pennsylvania counties, here are the key insights and policy recommendations:\nCluster 1 (Blue)\n\nCharacteristics: This cluster shows below average median household income and bachelor’s degree attainment, relatively low poverty rates, and moderate park coverage. Unemployment rates are below average, and the total population is small.\nPolicy Recommendation: Counties in this cluster appear to need more economic stability with more access to education and green spaces. Policies could focus on increasing fund allocation to public schools.\n\nCluster 2 (Green)\n\nCharacteristics: This cluster has high household income and low unemployment rates, high lower bachelor’s degree attainment, and high park coverage. Poverty rates are relatively low.\nPolicy Recommendation: These areas need minimal policy intervention and can serve as a model for how to better allocate resources in other Pennsylvania counties.\n\nCluster 3 (Red)\n\nCharacteristics: This cluster faces significant economic challenges, with the lowest median income and high poverty levels. While park coverage is high and educational attainment is fair, unemployment rates are also quite high.\nPolicy Recommendation: The county of Philadelphia should have more economic development programs, such as job creation initiatives and small business support.\n\nCluster 4 (Purple)\n\nCharacteristics: This cluster is defined by having relatively average socio-economic success and having relatively close proximity to key cities in the state. Median household income is slightly high compared to the other clusters.\nPolicy Recommendation: Policies should aim to reduce poverty and unemployment, focusing on workforce development and job creation initiatives as well as support for affordable housing and anti-poverty programs.\n\nSummary and Policy Focus\nThe clusters highlight areas of Pennsylvania that vary widely in socioeconomic and environmental characteristics:\n\nClusters 1 and 4 are clear areas of need, with high poverty and unemployment rates, calling for targeted interventions. However, one cluster is rural while the other is urban.\nClusters 2 and 3, while more stable, would benefit from strategic investments in green infrastructure and educational initiatives to maintain and enhance their resilience.\n\nIn conclusion, this analysis will help policymakers identify and address disparities across counties, ensuring equitable distribution of resources and tailored policy actions to foster economic and social stability statewide.",
    "crumbs": [
      "Analysis",
      "K-Means Clustering Analysis"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About the Researchers",
    "section": "",
    "text": "Macy Trout and Ryan Swett are Master of Urban Spatial Analytics students at the University of Pennsylvania."
  }
]